{
  "metadata": {
    "name": "@itentialopensource/aws-ec2-rest",
    "version": "1.0.6-2023.1.5",
    "description": "The integration of Itential and the AWS EC2 solution enables network teams to utilize its REST API to build automations that can include common tasks for provisioning and configuring resources for AWS EC2. This is a library of related automations that can be used as modular components in your own larger, end-to-end workflows.",
    "license": "Apache-2.0",
    "repository": {
      "type": "gitlab",
      "hostname": "gitlab.com",
      "path": "itentialopensource/pre-built-automations"
    },
    "keywords": [
      "Itential",
      "IAP"
    ],
    "author": "Itential",
    "IAPDependencies": {
      "@itential/app-workflow_engine": "",
      "@itential/app-json_forms": "",
      "@itentialopensource/adapter-aws_ec2": ""
    },
    "gitlabId": 51356760
  },
  "manifest": {
    "bundleName": "AWS - EC2 - REST",
    "fingerprint": "6530111689b3780158abe3b4",
    "createdEpoch": "1697648918038",
    "artifacts": [
      {
        "id": "Add Ingress Rule to Security Group - AWS",
        "name": "Add Ingress Rule to Security Group - AWS",
        "type": "workflow",
        "location": "/bundles/workflows/Add Ingress Rule to Security Group - AWS.json",
        "properties": {
          "entryPoint": false
        }
      },
      {
        "id": "Create and Attach Internet Gateway - AWS",
        "name": "Create and Attach Internet Gateway - AWS",
        "type": "workflow",
        "location": "/bundles/workflows/Create and Attach Internet Gateway - AWS.json",
        "properties": {
          "entryPoint": false
        }
      },
      {
        "id": "Create EC2 Instance - AWS",
        "name": "Create EC2 Instance - AWS",
        "type": "workflow",
        "location": "/bundles/workflows/Create EC2 Instance - AWS.json",
        "properties": {
          "entryPoint": false
        }
      },
      {
        "id": "Create Route - AWS",
        "name": "Create Route - AWS",
        "type": "workflow",
        "location": "/bundles/workflows/Create Route - AWS.json",
        "properties": {
          "entryPoint": false
        }
      },
      {
        "id": "Create Security Group with Ingress Rules - AWS",
        "name": "Create Security Group with Ingress Rules - AWS",
        "type": "workflow",
        "location": "/bundles/workflows/Create Security Group with Ingress Rules - AWS.json",
        "properties": {
          "entryPoint": false
        }
      },
      {
        "id": "Create VPC - AWS",
        "name": "Create VPC - AWS",
        "type": "workflow",
        "location": "/bundles/workflows/Create VPC - AWS.json",
        "properties": {
          "entryPoint": false
        }
      },
      {
        "id": "Create VPC Subnet - AWS",
        "name": "Create VPC Subnet - AWS",
        "type": "workflow",
        "location": "/bundles/workflows/Create VPC Subnet - AWS.json",
        "properties": {
          "entryPoint": false
        }
      },
      {
        "id": "Provision VPC with Networking - AWS",
        "name": "Provision VPC with Networking - AWS",
        "type": "workflow",
        "location": "/bundles/workflows/Provision VPC with Networking - AWS.json",
        "properties": {
          "entryPoint": false
        }
      },
      {
        "id": "Delete Security Groups by VPC - AWS",
        "name": "Delete Security Groups by VPC - AWS",
        "type": "workflow",
        "location": "/bundles/workflows/Delete Security Groups by VPC - AWS.json",
        "properties": {
          "entryPoint": false
        }
      },
      {
        "id": "Delete Subnets by VPC - AWS",
        "name": "Delete Subnets by VPC - AWS",
        "type": "workflow",
        "location": "/bundles/workflows/Delete Subnets by VPC - AWS.json",
        "properties": {
          "entryPoint": false
        }
      },
      {
        "id": "Destroy VPC and EC2 Instance - AWS",
        "name": "Destroy VPC and EC2 Instance - AWS",
        "type": "workflow",
        "location": "/bundles/workflows/Destroy VPC and EC2 Instance - AWS.json",
        "properties": {
          "entryPoint": false
        }
      },
      {
        "id": "Detach and Delete Internet Gateways by VPC - AWS",
        "name": "Detach and Delete Internet Gateways by VPC - AWS",
        "type": "workflow",
        "location": "/bundles/workflows/Detach and Delete Internet Gateways by VPC - AWS.json",
        "properties": {
          "entryPoint": false
        }
      },
      {
        "id": "63e641b023ad20015d2a0621",
        "name": "Build EC2 Tag Data",
        "type": "transformation",
        "location": "/bundles/transformations/Build EC2 Tag Data.json",
        "properties": {
          "entryPoint": false
        }
      },
      {
        "id": "652ff25180403501cbadcbe5",
        "name": "Build Ingress Rule List",
        "type": "transformation",
        "location": "/bundles/transformations/Build Ingress Rule List.json",
        "properties": {
          "entryPoint": false
        }
      },
      {
        "id": "63e6410623ad20015d2a0620",
        "name": "Build Security Group Rule List",
        "type": "transformation",
        "location": "/bundles/transformations/Build Security Group Rule List.json",
        "properties": {
          "entryPoint": false
        }
      },
      {
        "id": "6245ac411678ea01c7fbcd3e",
        "name": "Build SG Delete Array",
        "type": "transformation",
        "location": "/bundles/transformations/Build SG Delete Array.json",
        "properties": {
          "entryPoint": false
        }
      },
      {
        "id": "6532e52c344dfd019e4b388c",
        "name": "Build Subnet Delete Array",
        "type": "transformation",
        "location": "/bundles/transformations/Build Subnet Delete Array.json",
        "properties": {
          "entryPoint": false
        }
      },
      {
        "id": "63e3a39ed59d6601415e4e09",
        "name": "Build VPC Filter",
        "type": "transformation",
        "location": "/bundles/transformations/Build VPC Filter.json",
        "properties": {
          "entryPoint": false
        }
      },
      {
        "id": "655e0ee83bd5d401c431dc95",
        "name": "Build VPC Tag Data",
        "type": "transformation",
        "location": "/bundles/transformations/Build VPC Tag Data.json",
        "properties": {
          "entryPoint": false
        }
      },
      {
        "id": "63e50af123ad20015d2a061b",
        "name": "Prepare VPC ID",
        "type": "transformation",
        "location": "/bundles/transformations/Prepare VPC ID.json",
        "properties": {
          "entryPoint": false
        }
      },
      {
        "id": "63e520f723ad20015d2a061d",
        "name": "Process Instance Status",
        "type": "transformation",
        "location": "/bundles/transformations/Process Instance Status.json",
        "properties": {
          "entryPoint": false
        }
      },
      {
        "id": "6535d4e97c6b51019f8f4142",
        "name": "Process Instance Response",
        "type": "transformation",
        "location": "/bundles/transformations/Process Instance Response.json",
        "properties": {
          "entryPoint": false
        }
      }
    ]
  },
  "bundles": [
    {
      "type": "workflow",
      "data": {
        "name": "Add Ingress Rule to Security Group - AWS",
        "tasks": {
          "workflow_start": {
            "name": "workflow_start",
            "groups": [],
            "x": 1.1573333333333333,
            "y": 0.654,
            "nodeLocation": {
              "x": 4932,
              "y": 1296
            }
          },
          "workflow_end": {
            "name": "workflow_end",
            "groups": [],
            "x": 1.264,
            "y": 0.654,
            "nodeLocation": {
              "x": 5472,
              "y": 1296
            }
          },
          "40c1": {
            "name": "authorizeSecurityGroupIngress",
            "canvasName": "authorizeSecurityGroupIngress",
            "summary": "Create Security Group Ingress Rule",
            "description": "Create Security Group Ingress Rule",
            "location": "Adapter",
            "locationType": "Awsec2",
            "app": "Awsec2",
            "type": "automatic",
            "displayName": "Awsec2",
            "variables": {
              "incoming": {
                "cidrIp": "$var.job.sourceCidrIp",
                "fromPort": "$var.job.fromPort",
                "groupId": "$var.job.groupId",
                "groupName": "",
                "ipPermissions": "",
                "ipProtocol": "$var.job.ipProtocol",
                "sourceSecurityGroupName": "",
                "sourceSecurityGroupOwnerId": "",
                "toPort": "$var.job.toPort",
                "dryRun": false,
                "adapter_id": "$var.job.adapterId"
              },
              "outgoing": {
                "result": "$var.job.updatedSecurityGroup"
              },
              "error": "",
              "decorators": []
            },
            "actor": "Pronghorn",
            "groups": [],
            "x": 1.2106666666666666,
            "y": 0.654,
            "scheduled": false,
            "nodeLocation": {
              "x": 5196,
              "y": 1296
            }
          }
        },
        "transitions": {
          "workflow_start": {
            "40c1": {
              "state": "success",
              "type": "standard"
            }
          },
          "workflow_end": {},
          "40c1": {
            "workflow_end": {
              "state": "success",
              "type": "standard"
            }
          },
          "159a": {},
          "e25f": {},
          "7f1e": {},
          "7caa": {},
          "82d2": {},
          "bde1": {},
          "ac7": {},
          "82ca": {},
          "af52": {}
        },
        "inputSchema": {
          "type": "object",
          "properties": {
            "sourceCidrIp": {
              "title": "cidrIp",
              "type": "string"
            },
            "fromPort": {
              "title": "fromPort",
              "type": "number"
            },
            "groupId": {
              "title": "groupId",
              "type": "string"
            },
            "ipProtocol": {
              "title": "ipProtocol",
              "type": "string"
            },
            "toPort": {
              "title": "toPort",
              "type": "number"
            },
            "adapterId": {
              "type": [
                "array",
                "boolean",
                "null",
                "number",
                "object",
                "string"
              ]
            }
          },
          "required": [
            "sourceCidrIp",
            "fromPort",
            "groupId",
            "ipProtocol",
            "toPort",
            "adapterId"
          ]
        },
        "outputSchema": {
          "type": "object",
          "properties": {
            "sourceCidrIp": {
              "title": "cidrIp",
              "type": "string"
            },
            "fromPort": {
              "title": "fromPort",
              "type": "number"
            },
            "groupId": {
              "title": "groupId",
              "type": "string"
            },
            "ipProtocol": {
              "title": "ipProtocol",
              "type": "string"
            },
            "toPort": {
              "title": "toPort",
              "type": "number"
            },
            "adapterId": {
              "type": [
                "array",
                "boolean",
                "null",
                "number",
                "object",
                "string"
              ]
            },
            "_id": {
              "type": "string",
              "pattern": "^[0-9a-f]{24}$"
            },
            "initiator": {
              "type": "string"
            },
            "updatedSecurityGroup": {
              "title": "result",
              "type": "object"
            }
          }
        },
        "font_size": 12,
        "created": "2023-02-08T13:42:54.948Z",
        "createdVersion": "5.44.64-2022.1.25.0",
        "last_updated": "2023-10-19T18:37:37.043Z",
        "lastUpdatedVersion": "5.46.0-2023.1.19.0",
        "type": "automation",
        "preAutomationTime": 0,
        "sla": 0,
        "created_by": {
          "provenance": "local_aaa",
          "username": "admin@pronghorn",
          "firstname": "admin",
          "inactive": false
        },
        "last_updated_by": {
          "provenance": "local_aaa",
          "username": "admin@pronghorn",
          "firstname": "admin",
          "inactive": false
        },
        "canvasVersion": 1.5,
        "tags": [],
        "groups": [],
        "migrationVersion": 2
      }
    },
    {
      "type": "workflow",
      "data": {
        "name": "Create and Attach Internet Gateway - AWS",
        "tasks": {
          "workflow_start": {
            "name": "workflow_start",
            "groups": [],
            "x": -0.06217616580310881,
            "y": 0.6426592797783933,
            "nodeLocation": {
              "x": 24,
              "y": 1320
            }
          },
          "workflow_end": {
            "name": "workflow_end",
            "groups": [],
            "x": 0.35695708712613783,
            "y": 0.6481481481481481,
            "nodeLocation": {
              "x": 1128,
              "y": 1320
            }
          },
          "a0b6": {
            "name": "createInternetGateway",
            "canvasName": "createInternetGateway",
            "summary": "Create Internet Gateway",
            "description": "Create Internet Gateway",
            "location": "Adapter",
            "locationType": "Awsec2",
            "app": "Awsec2",
            "type": "automatic",
            "displayName": "Awsec2",
            "variables": {
              "incoming": {
                "dryRun": false,
                "adapter_id": "$var.job.adapterId"
              },
              "outgoing": {
                "result": null
              },
              "error": "",
              "decorators": []
            },
            "groups": [],
            "actor": "Pronghorn",
            "x": 0.05006501950585176,
            "y": 0.6435185185185185,
            "scheduled": false,
            "nodeLocation": {
              "x": 264,
              "y": 1320
            }
          },
          "3ca4": {
            "name": "query",
            "canvasName": "query",
            "summary": "Query Internet Gateway ID",
            "description": "Query Internet Gateway ID",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "response.CreateInternetGatewayResponse.internetGateway.internetGatewayId",
                "obj": "$var.a0b6.result"
              },
              "outgoing": {
                "return_data": "$var.job.internetGatewayId"
              },
              "error": "",
              "decorators": []
            },
            "groups": [],
            "x": 0.14499349804941483,
            "y": 0.6453703703703704,
            "scheduled": false,
            "nodeLocation": {
              "x": 576,
              "y": 1320
            }
          },
          "6a0c": {
            "name": "attachInternetGateway",
            "canvasName": "attachInternetGateway",
            "summary": "Attache Internet Gateway",
            "description": "Attach Internet Gateway to VPC",
            "location": "Adapter",
            "locationType": "Awsec2",
            "app": "Awsec2",
            "type": "automatic",
            "displayName": "EC2",
            "variables": {
              "incoming": {
                "dryRun": false,
                "internetGatewayId": "$var.3ca4.return_data",
                "vpcId": "$var.job.vpcId",
                "adapter_id": "$var.job.adapterId"
              },
              "outgoing": {
                "result": ""
              }
            },
            "actor": "Pronghorn",
            "groups": [],
            "nodeLocation": {
              "x": 876,
              "y": 1320
            }
          }
        },
        "transitions": {
          "workflow_start": {
            "a0b6": {
              "type": "standard",
              "state": "success"
            }
          },
          "workflow_end": {},
          "a0b6": {
            "3ca4": {
              "type": "standard",
              "state": "success"
            }
          },
          "3ca4": {
            "6a0c": {
              "state": "success",
              "type": "standard"
            }
          },
          "6a0c": {
            "workflow_end": {
              "state": "success",
              "type": "standard"
            }
          },
          "159a": {},
          "e25f": {},
          "7f1e": {},
          "7caa": {},
          "82d2": {},
          "bde1": {},
          "ac7": {},
          "82ca": {},
          "af52": {}
        },
        "inputSchema": {
          "type": "object",
          "properties": {
            "adapterId": {
              "type": [
                "array",
                "boolean",
                "null",
                "number",
                "object",
                "string"
              ]
            },
            "vpcId": {
              "title": "vpcId",
              "type": "string"
            }
          },
          "required": [
            "adapterId",
            "vpcId"
          ]
        },
        "outputSchema": {
          "type": "object",
          "properties": {
            "adapterId": {
              "type": [
                "array",
                "boolean",
                "null",
                "number",
                "object",
                "string"
              ]
            },
            "vpcId": {
              "title": "vpcId",
              "type": "string"
            },
            "_id": {
              "type": "string",
              "pattern": "^[0-9a-f]{24}$"
            },
            "initiator": {
              "type": "string"
            },
            "internetGatewayId": {
              "title": "return_data",
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                },
                {
                  "type": "object"
                },
                {
                  "type": "array"
                },
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "examples": [
                "value"
              ]
            }
          }
        },
        "font_size": 12,
        "created": "2021-02-01T21:11:28.865Z",
        "createdVersion": "5.10.4-2020.1.22.0",
        "last_updated": "2023-10-17T20:22:41.895Z",
        "lastUpdatedVersion": "5.46.0-2023.1.21.0",
        "type": "automation",
        "preAutomationTime": 0,
        "sla": 0,
        "canvasVersion": 1.5,
        "created_by": {
          "provenance": "local_aaa",
          "username": "admin@pronghorn",
          "firstname": "admin",
          "inactive": false
        },
        "last_updated_by": {
          "provenance": "local_aaa",
          "username": "admin@pronghorn",
          "firstname": "admin",
          "inactive": false
        },
        "tags": [],
        "groups": [],
        "migrationVersion": 2
      }
    },
    {
      "type": "workflow",
      "data": {
        "name": "Create EC2 Instance - AWS",
        "tasks": {
          "3101": {
            "name": "query",
            "canvasName": "query",
            "summary": "Query Public IP",
            "description": "Query public IP from Instance",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "response.DescribeInstancesResponse.reservationSet.item[0].instancesSet.item[0].networkInterfaceSet.item[0].association.publicIp",
                "obj": "$var.d9b4.result"
              },
              "outgoing": {
                "return_data": "$var.job.publicIp"
              },
              "error": ""
            },
            "groups": [],
            "x": 0.8798988621997471,
            "y": 0.506398537477148,
            "scheduled": false,
            "nodeLocation": {
              "x": 3252,
              "y": 984
            }
          },
          "5860": {
            "name": "transformation",
            "canvasName": "transformation",
            "summary": "Process Instance Status",
            "description": "Process instance status",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "tr_id": "63e520f723ad20015d2a061d",
                "variableMap": {
                  "describeInstanceResponse": "$var.55d8.result"
                },
                "options": {
                  "extractOutput": true,
                  "validateIncoming": false,
                  "revertToDefaultValue": true
                }
              },
              "outgoing": {
                "launchComplete": null
              },
              "decorators": []
            },
            "groups": [],
            "x": 0.6118836915297092,
            "y": 0.5009140767824497,
            "task_name": "Process Instance Status",
            "retrySettings": null,
            "nodeLocation": {
              "x": 2316,
              "y": 984
            }
          },
          "7220": {
            "name": "delay",
            "canvasName": "delay",
            "summary": "Wait to Check EC2 Status",
            "description": "Wait 30 seconds before rechecking EC2 creation status",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "time": 60
              },
              "outgoing": {
                "time_in_milliseconds": null
              },
              "error": ""
            },
            "groups": [],
            "x": 0.7098609355246523,
            "y": 0.6736745886654479,
            "scheduled": false,
            "nodeLocation": {
              "x": 2628,
              "y": 1092
            }
          },
          "workflow_start": {
            "name": "workflow_start",
            "groups": [],
            "x": 0.09354254677127338,
            "y": 0.498019801980198,
            "summary": "workflow_start",
            "description": "workflow_start",
            "nodeLocation": {
              "x": 828,
              "y": 984
            }
          },
          "workflow_end": {
            "name": "workflow_end",
            "groups": [],
            "x": 0.9519595448798989,
            "y": 0.5109689213893968,
            "summary": "workflow_end",
            "description": "workflow_end",
            "nodeLocation": {
              "x": 3492,
              "y": 984
            }
          },
          "f799": {
            "name": "runInstances",
            "canvasName": "runInstances",
            "summary": "Launch Instance",
            "description": "Launch Instance",
            "location": "Adapter",
            "locationType": "Awsec2",
            "app": "Awsec2",
            "displayName": "Awsec2",
            "type": "automatic",
            "variables": {
              "incoming": {
                "blockDeviceMapping": "",
                "imageId": "$var.job.imageId",
                "instanceType": "$var.job.instanceType",
                "ipv6AddressCount": "",
                "ipv6Address": "",
                "kernelId": "",
                "keyName": "",
                "maxCount": 1,
                "minCount": 1,
                "monitoringEnabled": "",
                "placementAvailabilityZone": "",
                "placementAffinity": "",
                "placementGroupName": "",
                "placementPartitionNumber": "",
                "placementHostId": "",
                "placementTenancy": "",
                "placementSpreadDomain": "",
                "ramdiskId": "",
                "securityGroupId": "",
                "securityGroup": "",
                "subnetId": "",
                "userData": "",
                "additionalInfo": "",
                "clientToken": "",
                "disableApiTermination": "",
                "dryRun": false,
                "ebsOptimized": "",
                "iamInstanceProfileArn": "",
                "iamInstanceProfileName": "",
                "instanceInitiatedShutdownBehavior": "",
                "networkInterface": "$var.job.networkInterface",
                "privateIpAddress": "",
                "elasticGpuSpecification": "",
                "elasticInferenceAccelerator": "",
                "tagSpecification": "",
                "launchTemplateLaunchTemplateId": "",
                "launchTemplateLaunchTemplateName": "",
                "launchTemplateVersion": "",
                "instanceMarketOptionsMarketType": "",
                "instanceMarketOptionsSpotOptions": "",
                "creditSpecificationCpuCredits": "",
                "cpuOptionsCoreCount": "",
                "cpuOptionsThreadsPerCore": "",
                "capacityReservationSpecificationCapacityReservationPreference": "",
                "capacityReservationSpecificationCapacityReservationTarget": "",
                "hibernationOptionsConfigured": "",
                "licenseSpecification": "",
                "adapter_id": "$var.job.adapterId"
              },
              "outgoing": {
                "result": null
              },
              "error": "",
              "decorators": []
            },
            "groups": [],
            "actor": "Pronghorn",
            "x": 0.16656608328304165,
            "y": 0.498019801980198,
            "scheduled": false,
            "nodeLocation": {
              "x": 1068,
              "y": 984
            }
          },
          "4b6d": {
            "name": "evaluation",
            "canvasName": "evaluation",
            "summary": "Check if EC2 Launch Completed",
            "description": "Check if EC2 Launch Completed",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "all_true_flag": false,
                "evaluation_groups": [
                  {
                    "all_true_flag": true,
                    "evaluations": [
                      {
                        "query": "",
                        "operand_1": {
                          "variable": "launchComplete",
                          "task": "5860"
                        },
                        "operator": "==",
                        "operand_2": {
                          "variable": true,
                          "task": "static"
                        }
                      }
                    ]
                  }
                ]
              },
              "outgoing": {
                "return_value": null
              }
            },
            "groups": [],
            "x": 0.7048040455120101,
            "y": 0.5054844606946983,
            "nodeLocation": {
              "x": 2628,
              "y": 984
            }
          },
          "ca5e": {
            "name": "transformation",
            "canvasName": "transformation",
            "summary": "Build EC2 Tag Data",
            "description": "Build EC2 Tag Data",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "tr_id": "63e641b023ad20015d2a0621",
                "variableMap": {
                  "vpcName": "$var.job.vpcName",
                  "launchResponse": "$var.f799.result"
                },
                "options": {
                  "extractOutput": false,
                  "validateIncoming": true,
                  "revertToDefaultValue": true
                }
              },
              "outgoing": {
                "ec2Tags": null,
                "instanceIdArray": null
              },
              "decorators": []
            },
            "groups": [],
            "x": 0.26614363307181654,
            "y": 0.500990099009901,
            "task_name": "Build EC2 Data",
            "retrySettings": null,
            "nodeLocation": {
              "x": 1380,
              "y": 984
            }
          },
          "e1c2": {
            "name": "createTags",
            "canvasName": "createTags",
            "summary": "Add Tag",
            "description": "Add tag to instance",
            "location": "Adapter",
            "locationType": "Awsec2",
            "app": "Awsec2",
            "type": "automatic",
            "displayName": "EC2",
            "variables": {
              "incoming": {
                "dryRun": false,
                "resourceId": "$var.ca5e.instanceIdArray",
                "tag": "$var.ca5e.ec2Tags",
                "adapter_id": "$var.job.adapterId"
              },
              "outgoing": {
                "result": ""
              }
            },
            "actor": "Pronghorn",
            "groups": [],
            "nodeLocation": {
              "x": 1692,
              "y": 984
            }
          },
          "55d8": {
            "name": "describeInstanceStatus",
            "canvasName": "describeInstanceStatus",
            "summary": "Describe Status",
            "description": "Get the instance status from EC2",
            "location": "Adapter",
            "locationType": "Awsec2",
            "app": "Awsec2",
            "type": "automatic",
            "displayName": "EC2",
            "variables": {
              "incoming": {
                "filter": "",
                "instanceId": "$var.ca5e.instanceIdArray",
                "maxResults": "",
                "nextToken": "",
                "dryRun": false,
                "includeAllInstances": true,
                "adapter_id": "$var.job.adapterId"
              },
              "outgoing": {
                "result": ""
              }
            },
            "actor": "Pronghorn",
            "groups": [],
            "nodeLocation": {
              "x": 2004,
              "y": 984
            }
          },
          "d9b4": {
            "name": "describeInstances",
            "canvasName": "describeInstances",
            "summary": "Describe instance",
            "description": "Describe instance from EC2",
            "location": "Adapter",
            "locationType": "Awsec2",
            "app": "Awsec2",
            "type": "automatic",
            "displayName": "EC2",
            "variables": {
              "incoming": {
                "filter": "",
                "instanceId": "$var.ca5e.instanceIdArray",
                "dryRun": false,
                "maxResults": "",
                "nextToken": "",
                "adapter_id": "$var.job.adapterId"
              },
              "outgoing": {
                "result": "$var.job.instanceInfo"
              }
            },
            "actor": "Pronghorn",
            "groups": [],
            "nodeLocation": {
              "x": 2940,
              "y": 984
            }
          }
        },
        "transitions": {
          "3101": {
            "workflow_end": {
              "type": "standard",
              "state": "success"
            }
          },
          "5860": {
            "4b6d": {
              "type": "standard",
              "state": "success"
            }
          },
          "7220": {
            "55d8": {
              "state": "success",
              "type": "revert"
            }
          },
          "workflow_start": {
            "f799": {
              "type": "standard",
              "state": "success"
            }
          },
          "workflow_end": {},
          "f799": {
            "ca5e": {
              "type": "standard",
              "state": "success"
            }
          },
          "4b6d": {
            "7220": {
              "type": "standard",
              "state": "failure"
            },
            "d9b4": {
              "state": "success",
              "type": "standard"
            }
          },
          "ca5e": {
            "e1c2": {
              "state": "success",
              "type": "standard"
            }
          },
          "e1c2": {
            "55d8": {
              "state": "success",
              "type": "standard"
            }
          },
          "55d8": {
            "5860": {
              "state": "success",
              "type": "standard"
            }
          },
          "d9b4": {
            "3101": {
              "state": "success",
              "type": "standard"
            }
          }
        },
        "inputSchema": {
          "type": "object",
          "properties": {
            "imageId": {
              "title": "imageId",
              "type": "string"
            },
            "instanceType": {
              "title": "instanceType",
              "type": "string"
            },
            "networkInterface": {
              "title": "networkInterface",
              "type": "array"
            },
            "adapterId": {
              "type": [
                "array",
                "boolean",
                "null",
                "number",
                "object",
                "string"
              ]
            },
            "vpcName": {
              "$id": "vpcName",
              "type": "string"
            }
          },
          "required": [
            "imageId",
            "instanceType",
            "networkInterface",
            "adapterId",
            "vpcName"
          ]
        },
        "outputSchema": {
          "type": "object",
          "properties": {
            "imageId": {
              "title": "imageId",
              "type": "string"
            },
            "instanceType": {
              "title": "instanceType",
              "type": "string"
            },
            "networkInterface": {
              "title": "networkInterface",
              "type": "array"
            },
            "adapterId": {
              "type": [
                "array",
                "boolean",
                "null",
                "number",
                "object",
                "string"
              ]
            },
            "vpcName": {
              "$id": "vpcName",
              "type": "string"
            },
            "_id": {
              "type": "string",
              "pattern": "^[0-9a-f]{24}$"
            },
            "initiator": {
              "type": "string"
            },
            "publicIp": {
              "title": "return_data",
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                },
                {
                  "type": "object"
                },
                {
                  "type": "array"
                },
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "examples": [
                "value"
              ]
            },
            "instanceInfo": {
              "title": "result",
              "type": "object"
            }
          }
        },
        "font_size": 12,
        "created": "2021-10-07T02:44:08.337Z",
        "createdVersion": "5.40.5-2021.1.8.0",
        "last_updated": "2023-12-11T19:52:06.754Z",
        "lastUpdatedVersion": "5.46.0-2023.1.30.0",
        "type": "automation",
        "preAutomationTime": 0,
        "sla": 0,
        "created_by": {
          "provenance": "local_aaa",
          "username": "admin@pronghorn",
          "firstname": "admin",
          "inactive": false
        },
        "last_updated_by": {
          "provenance": "local_aaa",
          "username": "admin@pronghorn",
          "firstname": "admin",
          "inactive": false
        },
        "canvasVersion": 1.5,
        "tags": [],
        "groups": [],
        "migrationVersion": 2
      }
    },
    {
      "type": "workflow",
      "data": {
        "name": "Create Route - AWS",
        "tasks": {
          "1247": {
            "name": "arrayLength",
            "canvasName": "length",
            "summary": "Get Length of Route Table Set Item",
            "description": "Get Length of Route Table Set Item",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "automatic",
            "displayName": "Array",
            "variables": {
              "incoming": {
                "arr": "$var.eb83.return_data"
              },
              "outgoing": {
                "length": ""
              }
            },
            "actor": "Pronghorn",
            "groups": [],
            "nodeLocation": {
              "x": 4776,
              "y": 1428
            }
          },
          "workflow_start": {
            "name": "workflow_start",
            "groups": [],
            "x": 0.7322834645669292,
            "y": 0.6699438202247191,
            "nodeLocation": {
              "x": 3588,
              "y": 1308
            }
          },
          "workflow_end": {
            "name": "workflow_end",
            "groups": [],
            "x": 1.1957087126137842,
            "y": 0.6722222222222223,
            "nodeLocation": {
              "x": 6060,
              "y": 1308
            }
          },
          "996c": {
            "name": "query",
            "canvasName": "query",
            "summary": "Query Route Table ID",
            "description": "Query Route Table ID",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "response.DescribeRouteTablesResponse.routeTableSet.item[0].routeTableId",
                "obj": "$var.6b15.result"
              },
              "outgoing": {
                "return_data": "$var.job.routeTableId"
              },
              "error": "",
              "decorators": []
            },
            "groups": [],
            "x": 1.0383615084525357,
            "y": 0.6712962962962963,
            "scheduled": false,
            "nodeLocation": {
              "x": 5088,
              "y": 1428
            }
          },
          "82b5": {
            "name": "createRoute",
            "canvasName": "createRoute",
            "summary": "Create Route",
            "description": "Create Route for Internet GW",
            "location": "Adapter",
            "locationType": "Awsec2",
            "app": "Awsec2",
            "type": "automatic",
            "displayName": "Awsec2",
            "variables": {
              "incoming": {
                "destinationCidrBlock": "$var.job.destinationCidrBlock",
                "destinationIpv6CidrBlock": "",
                "dryRun": false,
                "egressOnlyInternetGatewayId": "",
                "gatewayId": "$var.job.gatewayId",
                "instanceId": "",
                "natGatewayId": "",
                "transitGatewayId": "",
                "networkInterfaceId": "",
                "routeTableId": "$var.996c.return_data",
                "vpcPeeringConnectionId": "",
                "adapter_id": "$var.job.adapterId"
              },
              "outgoing": {
                "result": "$var.job.createdRoute"
              },
              "error": "",
              "decorators": []
            },
            "groups": [],
            "actor": "Pronghorn",
            "x": 1.1105331599479844,
            "y": 0.6703703703703704,
            "scheduled": false,
            "nodeLocation": {
              "x": 5736,
              "y": 1548
            }
          },
          "6b15": {
            "name": "describeRouteTables",
            "canvasName": "describeRouteTables",
            "summary": "Get Route Table",
            "description": "Describe Route Table, filter on VPC",
            "location": "Adapter",
            "locationType": "Awsec2",
            "app": "Awsec2",
            "type": "automatic",
            "displayName": "Awsec2",
            "variables": {
              "incoming": {
                "filter": "$var.ff13.vpcFilter",
                "dryRun": false,
                "routeTableId": "",
                "nextToken": "",
                "maxResults": "",
                "adapter_id": "$var.job.adapterId"
              },
              "outgoing": {
                "result": null
              },
              "error": "",
              "decorators": []
            },
            "groups": [],
            "actor": "Pronghorn",
            "x": 0.9466840052015605,
            "y": 0.6712962962962963,
            "scheduled": false,
            "nodeLocation": {
              "x": 4140,
              "y": 1428
            }
          },
          "ff13": {
            "name": "transformation",
            "canvasName": "transformation",
            "summary": "Build VPC Filter",
            "description": "Build VPC Filter",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "tr_id": "63e3a39ed59d6601415e4e09",
                "variableMap": {
                  "vpcId": "$var.job.vpcId"
                },
                "options": {
                  "extractOutput": true,
                  "validateIncoming": true,
                  "revertToDefaultValue": true
                }
              },
              "outgoing": {
                "vpcFilter": null
              },
              "decorators": []
            },
            "groups": [],
            "x": 0.8361508452535761,
            "y": 0.6712962962962963,
            "task_name": "Build VPC Filter",
            "retrySettings": null,
            "nodeLocation": {
              "x": 3828,
              "y": 1428
            }
          },
          "ca06": {
            "name": "createRoute",
            "canvasName": "createRoute",
            "summary": "Create Route",
            "description": "Create Route for Internet GW",
            "location": "Adapter",
            "locationType": "Awsec2",
            "app": "Awsec2",
            "type": "automatic",
            "displayName": "Awsec2",
            "variables": {
              "incoming": {
                "destinationCidrBlock": "$var.job.destinationCidrBlock",
                "destinationIpv6CidrBlock": "",
                "dryRun": false,
                "egressOnlyInternetGatewayId": "",
                "gatewayId": "$var.job.gatewayId",
                "instanceId": "",
                "natGatewayId": "",
                "transitGatewayId": "",
                "networkInterfaceId": "",
                "routeTableId": "$var.job.routeTableId",
                "vpcPeeringConnectionId": "",
                "adapter_id": "$var.job.adapterId"
              },
              "outgoing": {
                "result": "$var.job.createdRoute"
              },
              "error": "",
              "decorators": []
            },
            "groups": [],
            "actor": "Pronghorn",
            "x": 1.1105331599479844,
            "y": 0.6703703703703704,
            "scheduled": false,
            "nodeLocation": {
              "x": 4140,
              "y": 1308
            }
          },
          "110b": {
            "name": "evaluation",
            "canvasName": "evaluation",
            "summary": "Check If Route Table ID Is Specified",
            "description": "Check If Route Table ID Is Specified",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "all_true_flag": false,
                "evaluation_groups": [
                  {
                    "all_true_flag": true,
                    "evaluations": [
                      {
                        "operand_1": {
                          "task": "job",
                          "variable": "routeTableId"
                        },
                        "operand_2": {
                          "task": "static",
                          "variable": ""
                        },
                        "operator": "!=",
                        "query": "",
                        "rightQuery": ""
                      }
                    ]
                  }
                ]
              },
              "outgoing": {
                "return_value": ""
              }
            },
            "actor": "Pronghorn",
            "groups": [],
            "nodeLocation": {
              "x": 3828,
              "y": 1308
            }
          },
          "0f3d": {
            "name": "ViewData",
            "canvasName": "ViewData",
            "summary": "View Options",
            "description": "View Options",
            "location": "Application",
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "manual",
            "variables": {
              "incoming": {
                "header": "View Options",
                "message": "There are multiple Route Tables associated with the input vpcId. Do you want to create Route for the first found Route Table ID:",
                "body": "$var.996c.return_data",
                "variables": "",
                "btn_success": "Yes",
                "btn_failure": "No"
              },
              "outgoing": {}
            },
            "view": "/workflow_engine/task/ViewData",
            "groups": [],
            "nodeLocation": {
              "x": 5736,
              "y": 1428
            }
          },
          "eb83": {
            "name": "query",
            "canvasName": "query",
            "summary": "Query Route Table Set Item",
            "description": "Query Route Table Set Item",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "response.DescribeRouteTablesResponse.routeTableSet.item",
                "obj": "$var.6b15.result"
              },
              "outgoing": {
                "return_data": "$var.job.routeTableId"
              },
              "error": "",
              "decorators": []
            },
            "groups": [],
            "x": 1.0383615084525357,
            "y": 0.6712962962962963,
            "scheduled": false,
            "nodeLocation": {
              "x": 4464,
              "y": 1428
            }
          },
          "fa8e": {
            "name": "evaluation",
            "canvasName": "evaluation",
            "summary": "Check For Multiple Route Tables",
            "description": "Check for multiple route tables",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "all_true_flag": false,
                "evaluation_groups": [
                  {
                    "all_true_flag": true,
                    "evaluations": [
                      {
                        "operand_1": {
                          "task": "1247",
                          "variable": "length"
                        },
                        "operand_2": {
                          "task": "static",
                          "variable": 1
                        },
                        "operator": ">",
                        "query": "",
                        "rightQuery": ""
                      }
                    ]
                  }
                ]
              },
              "outgoing": {
                "return_value": ""
              }
            },
            "actor": "Pronghorn",
            "groups": [],
            "nodeLocation": {
              "x": 5412,
              "y": 1428
            }
          }
        },
        "transitions": {
          "1247": {
            "996c": {
              "state": "success",
              "type": "standard"
            }
          },
          "workflow_start": {
            "110b": {
              "state": "success",
              "type": "standard"
            }
          },
          "workflow_end": {},
          "996c": {
            "fa8e": {
              "state": "success",
              "type": "standard"
            }
          },
          "82b5": {
            "workflow_end": {
              "type": "standard",
              "state": "success"
            }
          },
          "6b15": {
            "eb83": {
              "state": "success",
              "type": "standard"
            }
          },
          "ff13": {
            "6b15": {
              "type": "standard",
              "state": "success"
            }
          },
          "ca06": {
            "workflow_end": {
              "state": "success",
              "type": "standard"
            }
          },
          "110b": {
            "ca06": {
              "type": "standard",
              "state": "success"
            },
            "ff13": {
              "type": "standard",
              "state": "failure"
            }
          },
          "0f3d": {
            "82b5": {
              "state": "success",
              "type": "standard"
            },
            "workflow_end": {
              "type": "standard",
              "state": "failure"
            }
          },
          "eb83": {
            "1247": {
              "state": "success",
              "type": "standard"
            }
          },
          "fa8e": {
            "0f3d": {
              "state": "success",
              "type": "standard"
            },
            "82b5": {
              "type": "standard",
              "state": "failure"
            }
          },
          "159a": {},
          "e25f": {},
          "7f1e": {},
          "7caa": {},
          "82d2": {},
          "bde1": {},
          "ac7": {},
          "82ca": {},
          "af52": {}
        },
        "inputSchema": {
          "type": "object",
          "properties": {
            "routeTableId": {
              "title": "routeTableId",
              "type": "string"
            },
            "destinationCidrBlock": {
              "title": "destinationCidrBlock",
              "type": "string"
            },
            "gatewayId": {
              "title": "gatewayId",
              "type": "string"
            },
            "adapterId": {
              "type": [
                "array",
                "boolean",
                "null",
                "number",
                "object",
                "string"
              ]
            },
            "vpcId": {
              "$id": "vpcId",
              "type": "string"
            }
          },
          "required": [
            "routeTableId",
            "destinationCidrBlock",
            "gatewayId",
            "adapterId",
            "vpcId"
          ]
        },
        "outputSchema": {
          "type": "object",
          "properties": {
            "routeTableId": {
              "title": "return_data",
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                },
                {
                  "type": "object"
                },
                {
                  "type": "array"
                },
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "examples": [
                "value"
              ]
            },
            "destinationCidrBlock": {
              "title": "destinationCidrBlock",
              "type": "string"
            },
            "gatewayId": {
              "title": "gatewayId",
              "type": "string"
            },
            "adapterId": {
              "type": [
                "array",
                "boolean",
                "null",
                "number",
                "object",
                "string"
              ]
            },
            "vpcId": {
              "$id": "vpcId",
              "type": "string"
            },
            "_id": {
              "type": "string",
              "pattern": "^[0-9a-f]{24}$"
            },
            "initiator": {
              "type": "string"
            },
            "createdRoute": {
              "title": "result",
              "type": "object"
            }
          }
        },
        "createdVersion": "5.46.0-2023.1.19.0",
        "created_by": {
          "provenance": "local_aaa",
          "username": "admin@pronghorn",
          "firstname": "admin",
          "inactive": false
        },
        "font_size": 12,
        "lastUpdatedVersion": "5.46.0-2023.1.19.0",
        "preAutomationTime": 0,
        "sla": 0,
        "type": "automation",
        "canvasVersion": 1.5,
        "last_updated": "2023-11-22T19:53:08.711Z",
        "created": "2023-11-21T22:00:28.130Z",
        "last_updated_by": {
          "provenance": "local_aaa",
          "username": "admin@pronghorn",
          "firstname": "admin",
          "inactive": false
        },
        "tags": [],
        "groups": [],
        "migrationVersion": 2
      }
    },
    {
      "type": "workflow",
      "data": {
        "name": "Create Security Group with Ingress Rules - AWS",
        "tasks": {
          "workflow_start": {
            "name": "workflow_start",
            "groups": [],
            "x": 1.0527831094049904,
            "y": 0.6401384083044983
          },
          "workflow_end": {
            "name": "workflow_end",
            "groups": [],
            "x": 1.7735124760076775,
            "y": 0.6516724336793541,
            "nodeLocation": {
              "x": 6864,
              "y": 1296
            }
          },
          "9ca5": {
            "name": "query",
            "canvasName": "query",
            "summary": "Query Security Group ID",
            "description": "Query Security Group ID",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "response.CreateSecurityGroupResponse.groupId",
                "obj": "$var.e62f.result"
              },
              "outgoing": {
                "return_data": "$var.job.securityGroupId"
              },
              "error": "",
              "decorators": []
            },
            "groups": [],
            "x": 1.336,
            "y": 0.642,
            "scheduled": false,
            "nodeLocation": {
              "x": 5544,
              "y": 1296
            }
          },
          "e62f": {
            "name": "createSecurityGroup",
            "canvasName": "createSecurityGroup",
            "summary": "Create Security Group",
            "description": "Create Security Group",
            "location": "Adapter",
            "locationType": "Awsec2",
            "app": "Awsec2",
            "type": "automatic",
            "displayName": "Awsec2",
            "variables": {
              "incoming": {
                "groupDescription": "$var.job.securityGroupDescription",
                "groupName": "$var.job.securityGroupName",
                "vpcId": "$var.job.vpcId",
                "dryRun": false,
                "adapter_id": "$var.job.adapterId"
              },
              "outgoing": {
                "result": null
              },
              "error": "",
              "decorators": []
            },
            "actor": "Pronghorn",
            "groups": [],
            "x": 1.1813819577735125,
            "y": 0.6424452133794695,
            "scheduled": false,
            "nodeLocation": {
              "x": 5136,
              "y": 1296
            }
          },
          "12c9": {
            "name": "transformation",
            "canvasName": "transformation",
            "summary": "Build Ingress Rule List",
            "description": "Build ingress rule list",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "tr_id": "652ff25180403501cbadcbe5",
                "variableMap": {
                  "ruleList": "$var.job.ruleList",
                  "groupId": "$var.9ca5.return_data",
                  "adapterId": "$var.job.adapterId"
                },
                "options": {
                  "extractOutput": true,
                  "validateIncoming": true,
                  "revertToDefaultValue": true
                }
              },
              "outgoing": {
                "ruleList": null
              },
              "decorators": []
            },
            "actor": "Pronghorn",
            "groups": [],
            "nodeLocation": {
              "x": 5904,
              "y": 1296
            }
          },
          "c96d": {
            "name": "childJob",
            "canvasName": "childJob",
            "summary": "Add Ingress Rule to Security Group",
            "description": "Add ingress rule to security group",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "task": "",
                "workflow": "Add Ingress Rule to Security Group - AWS",
                "variables": {
                  "adapterId": {
                    "task": "12c9",
                    "value": "ruleList"
                  }
                },
                "data_array": "$var.12c9.ruleList",
                "transformation": "",
                "loopType": "sequential"
              },
              "outgoing": {
                "job_details": ""
              }
            },
            "actor": "job",
            "groups": [],
            "nodeLocation": {
              "x": 6336,
              "y": 1296
            }
          }
        },
        "transitions": {
          "workflow_start": {
            "e62f": {
              "state": "success",
              "type": "standard"
            }
          },
          "workflow_end": {},
          "9ca5": {
            "12c9": {
              "state": "success",
              "type": "standard"
            }
          },
          "e62f": {
            "9ca5": {
              "state": "success",
              "type": "standard"
            }
          },
          "12c9": {
            "c96d": {
              "state": "success",
              "type": "standard"
            }
          },
          "c96d": {
            "workflow_end": {
              "state": "success",
              "type": "standard"
            }
          },
          "159a": {},
          "e25f": {},
          "7f1e": {},
          "7caa": {},
          "82d2": {},
          "bde1": {},
          "ac7": {},
          "82ca": {},
          "af52": {}
        },
        "inputSchema": {
          "type": "object",
          "properties": {
            "securityGroupDescription": {
              "title": "groupDescription",
              "type": "string"
            },
            "securityGroupName": {
              "title": "groupName",
              "type": "string"
            },
            "vpcId": {
              "title": "vpcId",
              "type": "string"
            },
            "adapterId": {
              "$id": "adapterId",
              "type": "string"
            },
            "ruleList": {
              "$id": "ruleList",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "sourceSubnetCidrMask": {
                    "type": "number",
                    "examples": [
                      32
                    ]
                  },
                  "port": {
                    "type": "number",
                    "examples": [
                      443
                    ]
                  },
                  "sourceIp": {
                    "type": "string",
                    "examples": [
                      "1.2.3.4"
                    ],
                    "format": "ipv4"
                  },
                  "protocol": {
                    "type": "string",
                    "examples": [
                      "TCP"
                    ]
                  }
                },
                "required": []
              }
            }
          },
          "required": [
            "securityGroupDescription",
            "securityGroupName",
            "vpcId",
            "adapterId",
            "ruleList"
          ]
        },
        "outputSchema": {
          "type": "object",
          "properties": {
            "securityGroupDescription": {
              "title": "groupDescription",
              "type": "string"
            },
            "securityGroupName": {
              "title": "groupName",
              "type": "string"
            },
            "vpcId": {
              "title": "vpcId",
              "type": "string"
            },
            "adapterId": {
              "$id": "adapterId",
              "type": "string"
            },
            "ruleList": {
              "$id": "ruleList",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "sourceSubnetCidrMask": {
                    "type": "number",
                    "examples": [
                      32
                    ]
                  },
                  "port": {
                    "type": "number",
                    "examples": [
                      443
                    ]
                  },
                  "sourceIp": {
                    "type": "string",
                    "examples": [
                      "1.2.3.4"
                    ],
                    "format": "ipv4"
                  },
                  "protocol": {
                    "type": "string",
                    "examples": [
                      "TCP"
                    ]
                  }
                },
                "required": []
              }
            },
            "_id": {
              "type": "string",
              "pattern": "^[0-9a-f]{24}$"
            },
            "initiator": {
              "type": "string"
            },
            "securityGroupId": {
              "title": "return_data",
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                },
                {
                  "type": "object"
                },
                {
                  "type": "array"
                },
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "examples": [
                "value"
              ]
            }
          }
        },
        "decorators": [
          {
            "type": "encryption",
            "pointer": "/variables/sourceCidrIp"
          },
          {
            "type": "encryption",
            "pointer": "/variables/fromPort"
          },
          {
            "type": "encryption",
            "pointer": "/variables/groupId"
          },
          {
            "type": "encryption",
            "pointer": "/variables/ipProtocol"
          },
          {
            "type": "encryption",
            "pointer": "/variables/toPort"
          },
          {
            "type": "encryption",
            "pointer": "/variables/_id"
          },
          {
            "type": "encryption",
            "pointer": "/variables/initiator"
          }
        ],
        "font_size": 12,
        "created": "2021-04-10T12:59:57.532Z",
        "createdVersion": "5.10.4-2020.1.22.0",
        "last_updated": "2023-10-18T16:19:48.425Z",
        "lastUpdatedVersion": "5.46.0-2023.1.19.0",
        "type": "automation",
        "preAutomationTime": 0,
        "sla": 0,
        "created_by": {
          "provenance": "local_aaa",
          "username": "admin@pronghorn",
          "firstname": "admin",
          "inactive": false
        },
        "canvasVersion": 1.5,
        "last_updated_by": {
          "provenance": "local_aaa",
          "username": "admin@pronghorn",
          "firstname": "admin",
          "inactive": false
        },
        "tags": [],
        "groups": [],
        "migrationVersion": 2
      }
    },
    {
      "type": "workflow",
      "data": {
        "name": "Create VPC - AWS",
        "tasks": {
          "workflow_start": {
            "name": "workflow_start",
            "groups": [],
            "x": 0.06692913385826772,
            "y": 0.6280884265279584,
            "nodeLocation": {
              "x": 408,
              "y": 1296
            }
          },
          "workflow_end": {
            "name": "workflow_end",
            "groups": [],
            "x": 0.4687906371911573,
            "y": 0.6287037037037037,
            "nodeLocation": {
              "x": 1512,
              "y": 1296
            }
          },
          "997d": {
            "name": "createVpc",
            "canvasName": "createVpc",
            "summary": "Create VPC",
            "description": "Create VPC",
            "location": "Adapter",
            "locationType": "Awsec2",
            "app": "Awsec2",
            "type": "automatic",
            "displayName": "Awsec2",
            "variables": {
              "incoming": {
                "cidrBlock": "$var.job.cidrBlock",
                "amazonProvidedIpv6CidrBlock": false,
                "dryRun": false,
                "instanceTenancy": "",
                "adapter_id": "$var.job.adapterId"
              },
              "outgoing": {
                "result": "$var.job.createdVpc"
              },
              "error": "",
              "decorators": []
            },
            "groups": [],
            "actor": "Pronghorn",
            "x": 0.15019505851755527,
            "y": 0.6277777777777778,
            "scheduled": false,
            "nodeLocation": {
              "x": 648,
              "y": 1296
            }
          },
          "e803": {
            "name": "createTags",
            "canvasName": "createTags",
            "summary": "Tag VPC",
            "description": "Add Tag to VPC",
            "location": "Adapter",
            "locationType": "Awsec2",
            "app": "Awsec2",
            "type": "automatic",
            "displayName": "Awsec2",
            "variables": {
              "incoming": {
                "dryRun": false,
                "resourceId": "$var.f19d.vpcId",
                "tag": "$var.f19d.vpcTags",
                "adapter_id": "$var.job.adapterId"
              },
              "outgoing": {
                "result": null
              },
              "error": "",
              "decorators": []
            },
            "groups": [],
            "actor": "Pronghorn",
            "x": 0.3836150845253576,
            "y": 0.6268518518518519,
            "scheduled": false,
            "nodeLocation": {
              "x": 1272,
              "y": 1296
            }
          },
          "f19d": {
            "name": "transformation",
            "canvasName": "transformation",
            "summary": "Build VPC Tag Data",
            "description": "Build VPC Tag Data",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "tr_id": "655e0ee83bd5d401c431dc95",
                "variableMap": {
                  "createVpcResponse": "$var.997d.result",
                  "vpcName": "$var.job.vpcName"
                },
                "options": {
                  "extractOutput": false,
                  "validateIncoming": true,
                  "revertToDefaultValue": true
                }
              },
              "outgoing": {
                "vpcId": null,
                "vpcTags": null
              },
              "decorators": []
            },
            "groups": [],
            "x": 0.26202860858257476,
            "y": 0.6277777777777778,
            "task_name": "Build VPC Tag Data",
            "retrySettings": null,
            "nodeLocation": {
              "x": 960,
              "y": 1296
            }
          }
        },
        "transitions": {
          "workflow_start": {
            "997d": {
              "type": "standard",
              "state": "success"
            }
          },
          "workflow_end": {},
          "997d": {
            "f19d": {
              "type": "standard",
              "state": "success"
            }
          },
          "e803": {
            "workflow_end": {
              "type": "standard",
              "state": "success"
            }
          },
          "f19d": {
            "e803": {
              "type": "standard",
              "state": "success"
            }
          },
          "159a": {},
          "e25f": {},
          "7f1e": {},
          "7caa": {},
          "82d2": {},
          "bde1": {},
          "ac7": {},
          "82ca": {},
          "af52": {}
        },
        "inputSchema": {
          "type": "object",
          "properties": {
            "cidrBlock": {
              "title": "cidrBlock",
              "type": "string"
            },
            "adapterId": {
              "type": [
                "array",
                "boolean",
                "null",
                "number",
                "object",
                "string"
              ]
            },
            "vpcName": {
              "$id": "vpcName",
              "type": "string"
            }
          },
          "required": [
            "cidrBlock",
            "adapterId",
            "vpcName"
          ]
        },
        "outputSchema": {
          "type": "object",
          "properties": {
            "cidrBlock": {
              "title": "cidrBlock",
              "type": "string"
            },
            "adapterId": {
              "type": [
                "array",
                "boolean",
                "null",
                "number",
                "object",
                "string"
              ]
            },
            "vpcName": {
              "$id": "vpcName",
              "type": "string"
            },
            "_id": {
              "type": "string",
              "pattern": "^[0-9a-f]{24}$"
            },
            "initiator": {
              "type": "string"
            },
            "createdVpc": {
              "title": "result",
              "type": "object"
            }
          }
        },
        "font_size": 12,
        "created": "2021-02-01T20:05:14.381Z",
        "createdVersion": "5.10.4-2020.1.22.0",
        "last_updated": "2023-11-22T14:27:20.935Z",
        "lastUpdatedVersion": "5.46.0-2023.1.19.0",
        "type": "automation",
        "preAutomationTime": 0,
        "sla": 0,
        "created_by": {
          "provenance": "local_aaa",
          "username": "admin@pronghorn",
          "firstname": "admin",
          "inactive": false
        },
        "last_updated_by": {
          "provenance": "local_aaa",
          "username": "admin@pronghorn",
          "firstname": "admin",
          "inactive": false
        },
        "canvasVersion": 1.5,
        "tags": [],
        "groups": [],
        "migrationVersion": 2
      }
    },
    {
      "type": "workflow",
      "data": {
        "name": "Create VPC Subnet - AWS",
        "tasks": {
          "workflow_start": {
            "name": "workflow_start",
            "groups": [],
            "x": 0.06692913385826772,
            "y": 0.6280884265279584,
            "nodeLocation": {
              "x": 360,
              "y": 1308
            }
          },
          "workflow_end": {
            "name": "workflow_end",
            "groups": [],
            "x": 0.3439531859557867,
            "y": 0.6305555555555555,
            "nodeLocation": {
              "x": 1152,
              "y": 1308
            }
          },
          "303c": {
            "name": "createSubnet",
            "canvasName": "createSubnet",
            "summary": "Create Subnet",
            "description": "Creates a subnet in an existing VPC.",
            "location": "Adapter",
            "locationType": "Awsec2",
            "app": "Awsec2",
            "type": "automatic",
            "displayName": "Awsec2",
            "variables": {
              "incoming": {
                "availabilityZone": "",
                "availabilityZoneId": "",
                "cidrBlock": "$var.job.cidrBlock",
                "ipv6CidrBlock": "",
                "vpcId": "$var.job.vpcId",
                "dryRun": "",
                "adapter_id": "$var.job.adapterId"
              },
              "outgoing": {
                "result": null
              },
              "error": "",
              "decorators": []
            },
            "groups": [],
            "actor": "Pronghorn",
            "x": 0.1684005201560468,
            "y": 0.6240740740740741,
            "scheduled": false,
            "nodeLocation": {
              "x": 600,
              "y": 1308
            }
          },
          "b647": {
            "name": "query",
            "canvasName": "query",
            "summary": "Query Subnet ID",
            "description": "Query Subnet ID",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "response.CreateSubnetResponse.subnet.subnetId",
                "obj": "$var.303c.result"
              },
              "outgoing": {
                "return_data": "$var.job.subnetId"
              },
              "error": "",
              "decorators": []
            },
            "groups": [],
            "x": 0.2654599114109233,
            "y": 0.6273148148148148,
            "scheduled": false,
            "nodeLocation": {
              "x": 912,
              "y": 1308
            }
          }
        },
        "transitions": {
          "workflow_start": {
            "303c": {
              "type": "standard",
              "state": "success"
            }
          },
          "workflow_end": {},
          "303c": {
            "b647": {
              "type": "standard",
              "state": "success"
            }
          },
          "b647": {
            "workflow_end": {
              "type": "standard",
              "state": "success"
            }
          },
          "159a": {},
          "e25f": {},
          "7f1e": {},
          "7caa": {},
          "82d2": {},
          "bde1": {},
          "ac7": {},
          "82ca": {},
          "af52": {}
        },
        "inputSchema": {
          "type": "object",
          "properties": {
            "cidrBlock": {
              "title": "cidrBlock",
              "type": "string"
            },
            "vpcId": {
              "title": "vpcId",
              "type": "string"
            },
            "adapterId": {
              "type": [
                "array",
                "boolean",
                "null",
                "number",
                "object",
                "string"
              ]
            }
          },
          "required": [
            "cidrBlock",
            "vpcId",
            "adapterId"
          ]
        },
        "outputSchema": {
          "type": "object",
          "properties": {
            "cidrBlock": {
              "title": "cidrBlock",
              "type": "string"
            },
            "vpcId": {
              "title": "vpcId",
              "type": "string"
            },
            "adapterId": {
              "type": [
                "array",
                "boolean",
                "null",
                "number",
                "object",
                "string"
              ]
            },
            "_id": {
              "type": "string",
              "pattern": "^[0-9a-f]{24}$"
            },
            "initiator": {
              "type": "string"
            },
            "subnetId": {
              "title": "return_data",
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                },
                {
                  "type": "object"
                },
                {
                  "type": "array"
                },
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "examples": [
                "value"
              ]
            }
          }
        },
        "font_size": 12,
        "created": "2023-02-08T13:20:00.672Z",
        "createdVersion": "5.44.64-2022.1.25.0",
        "last_updated": "2023-10-16T18:21:29.437Z",
        "lastUpdatedVersion": "5.46.0-2023.1.19.0",
        "type": "automation",
        "preAutomationTime": 0,
        "sla": 0,
        "canvasVersion": 1.5,
        "created_by": {
          "provenance": "local_aaa",
          "username": "admin@pronghorn",
          "firstname": "admin",
          "inactive": false
        },
        "last_updated_by": {
          "provenance": "local_aaa",
          "username": "admin@pronghorn",
          "firstname": "admin",
          "inactive": false
        },
        "tags": [],
        "groups": [],
        "migrationVersion": 2
      }
    },
    {
      "type": "workflow",
      "data": {
        "name": "Provision VPC with Networking - AWS",
        "tasks": {
          "6105": {
            "name": "childJob",
            "canvasName": "childJob",
            "summary": "Create VPC",
            "description": "Create VPC",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "task": "",
                "workflow": "Create VPC - AWS",
                "variables": {
                  "cidrBlock": {
                    "editable": true,
                    "task": "job",
                    "value": "vpcSubnet"
                  },
                  "vpcName": {
                    "task": "job",
                    "value": "vpcName"
                  },
                  "adapterId": {
                    "task": "job",
                    "value": "adapterId"
                  }
                },
                "data_array": "",
                "transformation": "",
                "loopType": ""
              },
              "outgoing": {
                "job_details": null
              }
            },
            "groups": [],
            "actor": "job",
            "x": 0.011703511053315995,
            "y": 0.4861111111111111,
            "nodeLocation": {
              "x": 372,
              "y": 1068
            }
          },
          "workflow_start": {
            "name": "workflow_start",
            "groups": [],
            "x": -0.06819553409776705,
            "y": 0.4891089108910891,
            "nodeLocation": {
              "x": 132,
              "y": 1068
            }
          },
          "workflow_end": {
            "name": "workflow_end",
            "groups": [],
            "x": 1.147254073627037,
            "y": 0.49405940594059405,
            "nodeLocation": {
              "x": 3420,
              "y": 1068
            }
          },
          "7a4f": {
            "name": "query",
            "canvasName": "query",
            "summary": "Query VPC ID",
            "description": "Query VPC ID",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "createdVpc.response.CreateVpcResponse.vpc.vpcId",
                "obj": "$var.6105.job_details"
              },
              "outgoing": {
                "return_data": "$var.job.vpcId"
              },
              "error": "",
              "decorators": []
            },
            "groups": [],
            "x": 0.09232769830949285,
            "y": 0.48518518518518516,
            "scheduled": false,
            "nodeLocation": {
              "x": 684,
              "y": 1068
            }
          },
          "cb2e": {
            "name": "childJob",
            "canvasName": "childJob",
            "summary": "Create Subnet",
            "description": "Create Subnet",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "task": "",
                "workflow": "Create VPC Subnet - AWS",
                "variables": {
                  "cidrBlock": {
                    "editable": true,
                    "task": "job",
                    "value": "vpcSubnet"
                  },
                  "vpcId": {
                    "editable": true,
                    "task": "7a4f",
                    "value": "return_data"
                  },
                  "adapterId": {
                    "task": "job",
                    "value": "adapterId"
                  }
                },
                "data_array": "",
                "transformation": "",
                "loopType": ""
              },
              "outgoing": {
                "job_details": null
              }
            },
            "groups": [],
            "actor": "job",
            "x": 0.19375812743823148,
            "y": 0.4842592592592593,
            "nodeLocation": {
              "x": 996,
              "y": 1068
            }
          },
          "a632": {
            "name": "query",
            "canvasName": "query",
            "summary": "Query Subnet ID",
            "description": "Query Subnet ID",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "subnetId",
                "obj": "$var.cb2e.job_details"
              },
              "outgoing": {
                "return_data": "$var.job.subnetId"
              },
              "error": "",
              "decorators": []
            },
            "groups": [],
            "x": 0.2958387516254877,
            "y": 0.4888888888888889,
            "scheduled": false,
            "nodeLocation": {
              "x": 1308,
              "y": 1068
            }
          },
          "ee02": {
            "name": "childJob",
            "canvasName": "childJob",
            "summary": "Create and Attach Internet Gateway",
            "description": "Create and Attach Internet Gateway",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "task": "",
                "workflow": "Create and Attach Internet Gateway - AWS",
                "variables": {
                  "vpcId": {
                    "editable": true,
                    "task": "7a4f",
                    "value": "return_data"
                  },
                  "adapterId": {
                    "task": "job",
                    "value": "adapterId"
                  }
                },
                "data_array": "",
                "transformation": "",
                "loopType": ""
              },
              "outgoing": {
                "job_details": null
              }
            },
            "groups": [],
            "actor": "job",
            "x": 0.4213046080191502,
            "y": 0.487962962962963,
            "nodeLocation": {
              "x": 1620,
              "y": 1068
            }
          },
          "2f28": {
            "name": "query",
            "canvasName": "query",
            "summary": "Query Internet Gateway ID",
            "description": "Query Internet Gateway ID",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "internetGatewayId",
                "obj": "$var.ee02.job_details"
              },
              "outgoing": {
                "return_data": "$var.job.internetGatewayId"
              },
              "error": "",
              "decorators": []
            },
            "groups": [],
            "x": 0.533213644524237,
            "y": 0.48703703703703705,
            "scheduled": false,
            "nodeLocation": {
              "x": 1932,
              "y": 1068
            }
          },
          "e5bc": {
            "name": "childJob",
            "canvasName": "childJob",
            "summary": "Create Default Route",
            "description": "Create Default Route",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "task": "",
                "workflow": "Create Route - AWS",
                "variables": {
                  "destinationCidrBlock": {
                    "editable": true,
                    "task": "static",
                    "value": "0.0.0.0/0"
                  },
                  "gatewayId": {
                    "editable": true,
                    "task": "2f28",
                    "value": "return_data"
                  },
                  "vpcId": {
                    "editable": true,
                    "task": "7a4f",
                    "value": "return_data"
                  },
                  "adapterId": {
                    "task": "job",
                    "value": "adapterId"
                  },
                  "routeTableId": {
                    "task": "static",
                    "value": ""
                  }
                },
                "data_array": "",
                "transformation": "",
                "loopType": ""
              },
              "outgoing": {
                "job_details": null
              }
            },
            "groups": [],
            "actor": "job",
            "x": 0.6306578153289076,
            "y": 0.4891089108910891,
            "nodeLocation": {
              "x": 2244,
              "y": 1068
            }
          },
          "5d5e": {
            "name": "childJob",
            "canvasName": "childJob",
            "summary": "Create Security Group with Ingress Rules",
            "description": "Create Security Group with Ingress Rules",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "task": "",
                "workflow": "Create Security Group with Ingress Rules - AWS",
                "variables": {
                  "securityGroupDescription": {
                    "editable": true,
                    "task": "job",
                    "value": "securityGroupName"
                  },
                  "securityGroupName": {
                    "task": "job",
                    "value": "securityGroupDesc"
                  },
                  "vpcId": {
                    "editable": true,
                    "task": "7a4f",
                    "value": "return_data"
                  },
                  "ruleList": {
                    "editable": true,
                    "task": "5f81",
                    "value": "ruleList"
                  },
                  "adapterId": {
                    "task": "job",
                    "value": "adapterId"
                  }
                },
                "data_array": "",
                "transformation": "",
                "loopType": ""
              },
              "outgoing": {
                "job_details": null
              }
            },
            "groups": [],
            "actor": "job",
            "x": 0.9535304767652384,
            "y": 0.48514851485148514,
            "nodeLocation": {
              "x": 2868,
              "y": 1068
            }
          },
          "5b97": {
            "name": "query",
            "canvasName": "query",
            "summary": "Query Security Group ID",
            "description": "Query Security Group ID",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "securityGroupId",
                "obj": "$var.5d5e.job_details"
              },
              "outgoing": {
                "return_data": "$var.job.securityGroupId"
              },
              "error": "",
              "decorators": []
            },
            "groups": [],
            "x": 1.0844900422450212,
            "y": 0.4891089108910891,
            "scheduled": false,
            "nodeLocation": {
              "x": 3180,
              "y": 1068
            }
          },
          "5f81": {
            "name": "transformation",
            "canvasName": "transformation",
            "summary": "Build Security Group Rule List",
            "description": "Build Security Group Rule List",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "tr_id": "63e6410623ad20015d2a0620",
                "variableMap": {
                  "ingressRules": "$var.job.ingressRules"
                },
                "options": {
                  "extractOutput": true,
                  "validateIncoming": true,
                  "revertToDefaultValue": true
                }
              },
              "outgoing": {
                "ruleList": null
              },
              "decorators": []
            },
            "groups": [],
            "x": 0.7742908871454436,
            "y": 0.48316831683168315,
            "task_name": "Build Security Group Rule List",
            "retrySettings": null,
            "nodeLocation": {
              "x": 2556,
              "y": 1068
            }
          }
        },
        "transitions": {
          "6105": {
            "7a4f": {
              "type": "standard",
              "state": "success"
            }
          },
          "workflow_start": {
            "6105": {
              "type": "standard",
              "state": "success"
            }
          },
          "workflow_end": {},
          "7a4f": {
            "cb2e": {
              "type": "standard",
              "state": "success"
            }
          },
          "cb2e": {
            "a632": {
              "type": "standard",
              "state": "success"
            }
          },
          "a632": {
            "ee02": {
              "type": "standard",
              "state": "success"
            }
          },
          "ee02": {
            "2f28": {
              "type": "standard",
              "state": "success"
            }
          },
          "2f28": {
            "e5bc": {
              "type": "standard",
              "state": "success"
            }
          },
          "e5bc": {
            "5f81": {
              "type": "standard",
              "state": "success"
            }
          },
          "5d5e": {
            "5b97": {
              "type": "standard",
              "state": "success"
            }
          },
          "5b97": {
            "workflow_end": {
              "type": "standard",
              "state": "success"
            }
          },
          "5f81": {
            "5d5e": {
              "type": "standard",
              "state": "success"
            }
          }
        },
        "inputSchema": {
          "type": "object",
          "properties": {
            "vpcSubnet": {
              "title": "cidrBlock",
              "type": "string"
            },
            "vpcName": {
              "$id": "vpcName",
              "type": "string"
            },
            "adapterId": {
              "$id": "adapterId",
              "type": "string"
            },
            "securityGroupName": {
              "title": "groupDescription",
              "type": "string"
            },
            "securityGroupDesc": {
              "title": "groupName",
              "type": "string"
            },
            "ingressRules": {
              "$id": "ingressRules",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "sourceSubnetCidrMask": {
                    "type": "number",
                    "examples": [
                      32
                    ]
                  },
                  "port": {
                    "type": "number",
                    "examples": [
                      443
                    ]
                  },
                  "sourceIp": {
                    "type": "string",
                    "examples": [
                      "1%2E2%2E3%2E4"
                    ],
                    "format": "ipv4"
                  },
                  "protocol": {
                    "type": "string",
                    "examples": [
                      "TCP"
                    ]
                  }
                },
                "required": []
              }
            }
          },
          "required": [
            "vpcSubnet",
            "vpcName",
            "adapterId",
            "securityGroupName",
            "securityGroupDesc",
            "ingressRules"
          ]
        },
        "outputSchema": {
          "type": "object",
          "properties": {
            "vpcSubnet": {
              "title": "cidrBlock",
              "type": "string"
            },
            "vpcName": {
              "$id": "vpcName",
              "type": "string"
            },
            "adapterId": {
              "$id": "adapterId",
              "type": "string"
            },
            "securityGroupName": {
              "title": "groupDescription",
              "type": "string"
            },
            "securityGroupDesc": {
              "title": "groupName",
              "type": "string"
            },
            "ingressRules": {
              "$id": "ingressRules",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "sourceSubnetCidrMask": {
                    "type": "number",
                    "examples": [
                      32
                    ]
                  },
                  "port": {
                    "type": "number",
                    "examples": [
                      443
                    ]
                  },
                  "sourceIp": {
                    "type": "string",
                    "examples": [
                      "1%2E2%2E3%2E4"
                    ],
                    "format": "ipv4"
                  },
                  "protocol": {
                    "type": "string",
                    "examples": [
                      "TCP"
                    ]
                  }
                },
                "required": []
              }
            },
            "_id": {
              "type": "string",
              "pattern": "^[0-9a-f]{24}$"
            },
            "initiator": {
              "type": "string"
            },
            "vpcId": {
              "title": "return_data",
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                },
                {
                  "type": "object"
                },
                {
                  "type": "array"
                },
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "examples": [
                "value"
              ]
            },
            "subnetId": {
              "title": "return_data",
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                },
                {
                  "type": "object"
                },
                {
                  "type": "array"
                },
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "examples": [
                "value"
              ]
            },
            "internetGatewayId": {
              "title": "return_data",
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                },
                {
                  "type": "object"
                },
                {
                  "type": "array"
                },
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "examples": [
                "value"
              ]
            },
            "securityGroupId": {
              "title": "return_data",
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                },
                {
                  "type": "object"
                },
                {
                  "type": "array"
                },
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "examples": [
                "value"
              ]
            }
          }
        },
        "type": "automation",
        "font_size": 12,
        "last_updated": "2023-11-22T15:55:57.238Z",
        "lastUpdatedVersion": "5.46.0-2023.1.19.0",
        "created": "2023-02-10T12:51:05.590Z",
        "createdVersion": "5.44.64-2022.1.25.0",
        "preAutomationTime": 0,
        "sla": 0,
        "created_by": {
          "provenance": "local_aaa",
          "username": "admin@pronghorn",
          "firstname": "admin",
          "inactive": false
        },
        "last_updated_by": {
          "provenance": "local_aaa",
          "username": "admin@pronghorn",
          "firstname": "admin",
          "inactive": false
        },
        "canvasVersion": 1.5,
        "tags": [],
        "groups": [],
        "migrationVersion": 2
      }
    },
    {
      "type": "workflow",
      "data": {
        "name": "Delete Security Groups by VPC - AWS",
        "tasks": {
          "2432": {
            "name": "stub",
            "canvasName": "stub",
            "summary": "No Security Groups Found",
            "description": "No Security Groups Found",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "automatic",
            "displayName": "Tools",
            "variables": {
              "incoming": {
                "type": "success",
                "delay": "",
                "response": ""
              },
              "outgoing": {
                "response": null
              },
              "error": "",
              "decorators": []
            },
            "groups": [],
            "actor": "Pronghorn",
            "x": 0.53646408839779,
            "y": 0.3493975903614458,
            "scheduled": false,
            "nodeLocation": {
              "x": 1224,
              "y": 948
            }
          },
          "4685": {
            "name": "arrayPush",
            "canvasName": "push",
            "summary": "Filter Array",
            "description": "Filter Array",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "automatic",
            "displayName": "Array",
            "variables": {
              "incoming": {
                "arr": [],
                "elementN": "$var.80a6.merged_object"
              },
              "outgoing": {
                "pushedArray": null
              },
              "error": "",
              "decorators": []
            },
            "groups": [],
            "actor": "Pronghorn",
            "x": 0.1541436464088398,
            "y": 0.5050200803212851,
            "scheduled": false,
            "nodeLocation": {
              "x": 600,
              "y": 1056
            }
          },
          "workflow_start": {
            "name": "workflow_start",
            "groups": [],
            "x": 0,
            "y": 0.5,
            "nodeLocation": {
              "x": 48,
              "y": 1056
            }
          },
          "workflow_end": {
            "name": "workflow_end",
            "groups": [],
            "x": 0.6287292817679558,
            "y": 0.5080321285140562,
            "nodeLocation": {
              "x": 2088,
              "y": 1056
            }
          },
          "80a6": {
            "name": "merge",
            "canvasName": "merge",
            "summary": "VPC ID Filter",
            "description": "VPC ID Filter",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "data_to_merge": [
                  {
                    "key": "name",
                    "value": {
                      "task": "static",
                      "variable": "vpc-id",
                      "editable": true
                    }
                  },
                  {
                    "key": "value",
                    "value": {
                      "task": "job",
                      "variable": "vpcId",
                      "editable": true
                    }
                  }
                ]
              },
              "outgoing": {
                "merged_object": null
              }
            },
            "groups": [],
            "x": 0.05966850828729282,
            "y": 0.5030120481927711,
            "nodeLocation": {
              "x": 288,
              "y": 1056
            }
          },
          "5ee3": {
            "name": "describeSecurityGroups",
            "canvasName": "describeSecurityGroups",
            "summary": "Find SGs for VPC",
            "description": "Find SGs for VPC",
            "location": "Adapter",
            "locationType": "Awsec2",
            "app": "Awsec2",
            "type": "automatic",
            "displayName": "Awsec2",
            "variables": {
              "incoming": {
                "filter": "$var.4685.pushedArray",
                "groupId": "",
                "groupName": "",
                "dryRun": "",
                "nextToken": "",
                "maxResults": "",
                "adapter_id": "$var.job.adapterId"
              },
              "outgoing": {
                "result": null
              },
              "error": "",
              "decorators": []
            },
            "groups": [],
            "actor": "Pronghorn",
            "x": 0.261878453038674,
            "y": 0.5070281124497992,
            "scheduled": false,
            "nodeLocation": {
              "x": 912,
              "y": 1056
            }
          },
          "daf4": {
            "name": "evaluation",
            "canvasName": "evaluation",
            "summary": "Check if Security Groups Found",
            "description": "Check if Security Groups Found",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "all_true_flag": false,
                "evaluation_groups": [
                  {
                    "all_true_flag": false,
                    "evaluations": [
                      {
                        "query": "response.DescribeSecurityGroupsResponse.securityGroupInfo",
                        "operand_1": {
                          "variable": "result",
                          "task": "5ee3"
                        },
                        "operator": "!=",
                        "operand_2": {
                          "variable": "",
                          "task": "static"
                        }
                      }
                    ]
                  }
                ]
              },
              "outgoing": {
                "return_value": null
              }
            },
            "groups": [],
            "x": 0.35082872928176795,
            "y": 0.5060240963855421,
            "nodeLocation": {
              "x": 1224,
              "y": 1056
            }
          },
          "e541": {
            "name": "transformation",
            "canvasName": "transformation",
            "summary": "Build SG Delete List",
            "description": "Build security group delete list",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "tr_id": "6245ac411678ea01c7fbcd3e",
                "variableMap": {
                  "sgResponse": "$var.5ee3.result"
                },
                "options": {
                  "extractOutput": true,
                  "validateIncoming": true,
                  "revertToDefaultValue": true
                }
              },
              "outgoing": {
                "sgDeleteArray": null
              }
            },
            "groups": [],
            "x": 0.43480662983425417,
            "y": 0.5090361445783133,
            "task_name": "Build SG Delete Array",
            "retrySettings": null,
            "nodeLocation": {
              "x": 1536,
              "y": 1056
            }
          },
          "f643": {
            "name": "deleteSecurityGroups",
            "canvasName": "deleteSecurityGroups",
            "summary": "Delete Security Groups",
            "description": "Delete Security Groups",
            "location": "Adapter",
            "locationType": "Awsec2",
            "app": "Awsec2",
            "type": "automatic",
            "displayName": "EC2",
            "variables": {
              "incoming": {
                "securityGroupArray": "$var.e541.sgDeleteArray",
                "adapter_id": "$var.job.adapterId"
              },
              "outgoing": {
                "result": "$var.job.deletedSecurityGroup"
              }
            },
            "actor": "Pronghorn",
            "groups": [],
            "nodeLocation": {
              "x": 1860,
              "y": 1056
            }
          }
        },
        "transitions": {
          "212": {},
          "2432": {
            "workflow_end": {
              "state": "success",
              "type": "standard"
            }
          },
          "4685": {
            "5ee3": {
              "type": "standard",
              "state": "success"
            }
          },
          "workflow_start": {
            "80a6": {
              "type": "standard",
              "state": "success"
            }
          },
          "workflow_end": {},
          "80a6": {
            "4685": {
              "type": "standard",
              "state": "success"
            }
          },
          "5ee3": {
            "daf4": {
              "type": "standard",
              "state": "success"
            }
          },
          "daf4": {
            "2432": {
              "type": "standard",
              "state": "failure"
            },
            "e541": {
              "type": "standard",
              "state": "success"
            }
          },
          "e541": {
            "f643": {
              "state": "success",
              "type": "standard"
            }
          },
          "f643": {
            "workflow_end": {
              "state": "success",
              "type": "standard"
            }
          },
          "dfad": {},
          "50ac": {}
        },
        "inputSchema": {
          "type": "object",
          "properties": {
            "vpcId": {
              "type": [
                "array",
                "boolean",
                "null",
                "number",
                "object",
                "string"
              ]
            },
            "adapterId": {
              "type": [
                "array",
                "boolean",
                "null",
                "number",
                "object",
                "string"
              ]
            }
          },
          "required": [
            "vpcId",
            "adapterId"
          ]
        },
        "outputSchema": {
          "type": "object",
          "properties": {
            "vpcId": {
              "type": [
                "array",
                "boolean",
                "null",
                "number",
                "object",
                "string"
              ]
            },
            "adapterId": {
              "type": [
                "array",
                "boolean",
                "null",
                "number",
                "object",
                "string"
              ]
            },
            "_id": {
              "type": "string",
              "pattern": "^[0-9a-f]{24}$"
            },
            "initiator": {
              "type": "string"
            },
            "deletedSecurityGroup": {
              "title": "result",
              "type": "array"
            }
          }
        },
        "canvasVersion": 1.5,
        "created": "2022-03-31T12:29:42.937Z",
        "createdVersion": "5.40.5-2021.1.52.0",
        "created_by": {
          "provenance": "local_aaa",
          "username": "admin@pronghorn",
          "firstname": "admin",
          "inactive": false
        },
        "font_size": 12,
        "lastUpdatedVersion": "5.46.0-2023.1.19.0",
        "last_updated": "2023-10-19T20:09:21.504Z",
        "last_updated_by": {
          "provenance": "local_aaa",
          "username": "admin@pronghorn",
          "firstname": "admin",
          "inactive": false
        },
        "preAutomationTime": 0,
        "sla": 0,
        "type": "automation",
        "tags": [],
        "groups": [],
        "migrationVersion": 2
      }
    },
    {
      "type": "workflow",
      "data": {
        "name": "Delete Subnets by VPC - AWS",
        "tasks": {
          "2432": {
            "name": "stub",
            "canvasName": "stub",
            "summary": "No Subnets Found",
            "description": "No Subnets Found",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "automatic",
            "displayName": "Tools",
            "variables": {
              "incoming": {
                "type": "success",
                "delay": "",
                "response": ""
              },
              "outgoing": {
                "response": null
              },
              "error": "",
              "decorators": []
            },
            "groups": [],
            "actor": "Pronghorn",
            "x": 0.53646408839779,
            "y": 0.3493975903614458,
            "scheduled": false,
            "nodeLocation": {
              "x": 1188,
              "y": 804
            }
          },
          "4685": {
            "name": "arrayPush",
            "canvasName": "push",
            "summary": "Filter Array",
            "description": "Filter Array",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "automatic",
            "displayName": "Array",
            "variables": {
              "incoming": {
                "arr": [],
                "elementN": "$var.80a6.merged_object"
              },
              "outgoing": {
                "pushedArray": null
              },
              "error": "",
              "decorators": []
            },
            "groups": [],
            "actor": "Pronghorn",
            "x": 0.1541436464088398,
            "y": 0.5050200803212851,
            "scheduled": false,
            "nodeLocation": {
              "x": 564,
              "y": 960
            }
          },
          "workflow_start": {
            "name": "workflow_start",
            "groups": [],
            "x": 0,
            "y": 0.5,
            "nodeLocation": {
              "x": 12,
              "y": 960
            }
          },
          "workflow_end": {
            "name": "workflow_end",
            "groups": [],
            "x": 0.6287292817679558,
            "y": 0.5080321285140562,
            "nodeLocation": {
              "x": 2112,
              "y": 960
            }
          },
          "80a6": {
            "name": "merge",
            "canvasName": "merge",
            "summary": "VPC ID Filter",
            "description": "VPC ID Filter",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "data_to_merge": [
                  {
                    "key": "name",
                    "value": {
                      "task": "static",
                      "variable": "vpc-id",
                      "editable": true
                    }
                  },
                  {
                    "key": "value",
                    "value": {
                      "task": "job",
                      "variable": "vpcId",
                      "editable": true
                    }
                  }
                ]
              },
              "outgoing": {
                "merged_object": null
              }
            },
            "groups": [],
            "x": 0.05966850828729282,
            "y": 0.5030120481927711,
            "nodeLocation": {
              "x": 252,
              "y": 960
            }
          },
          "daf4": {
            "name": "evaluation",
            "canvasName": "evaluation",
            "summary": "Check if Subnets Found",
            "description": "Check if Subnets Found",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "all_true_flag": false,
                "evaluation_groups": [
                  {
                    "all_true_flag": false,
                    "evaluations": [
                      {
                        "query": "response.DescribeSubnetsResponse.subnetSet",
                        "operand_1": {
                          "variable": "result",
                          "task": "65d7"
                        },
                        "operator": "!=",
                        "operand_2": {
                          "variable": "",
                          "task": "static"
                        }
                      }
                    ]
                  }
                ]
              },
              "outgoing": {
                "return_value": null
              }
            },
            "groups": [],
            "x": 0.3259668508287293,
            "y": 0.5030120481927711,
            "nodeLocation": {
              "x": 1188,
              "y": 960
            }
          },
          "65d7": {
            "name": "describeSubnets",
            "canvasName": "describeSubnets",
            "summary": "Find Subnets for VPC",
            "description": "Find Subnets for VPC",
            "location": "Adapter",
            "locationType": "Awsec2",
            "app": "Awsec2",
            "type": "automatic",
            "displayName": "Awsec2",
            "variables": {
              "incoming": {
                "filter": "$var.4685.pushedArray",
                "subnetId": "",
                "dryRun": "",
                "nextToken": "",
                "maxResults": "",
                "adapter_id": "$var.job.adapterId"
              },
              "outgoing": {
                "result": null
              },
              "error": "",
              "decorators": []
            },
            "groups": [],
            "actor": "Pronghorn",
            "x": 0.2535911602209945,
            "y": 0.5150602409638554,
            "scheduled": false,
            "nodeLocation": {
              "x": 876,
              "y": 960
            }
          },
          "d988": {
            "name": "deleteSubnets",
            "canvasName": "deleteSubnets",
            "summary": "Delete Subnets",
            "description": "Delete Subnets",
            "location": "Adapter",
            "locationType": "Awsec2",
            "app": "Awsec2",
            "type": "automatic",
            "displayName": "Awsec2",
            "variables": {
              "incoming": {
                "subnetArray": "$var.e7a5.subnetDeleteArray",
                "adapter_id": "$var.job.adapterId"
              },
              "outgoing": {
                "result": "$var.job.deletedSubnet"
              },
              "error": "",
              "decorators": []
            },
            "groups": [],
            "actor": "Pronghorn",
            "x": 0.5359116022099447,
            "y": 0.501004016064257,
            "scheduled": false,
            "nodeLocation": {
              "x": 1836,
              "y": 960
            }
          },
          "e7a5": {
            "name": "transformation",
            "canvasName": "transformation",
            "summary": "Build Subnet Delete List",
            "description": "Build subnet delete list",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "tr_id": "6532e52c344dfd019e4b388c",
                "variableMap": {
                  "subnetResponse": "$var.65d7.result"
                },
                "options": {
                  "extractOutput": true,
                  "validateIncoming": true,
                  "revertToDefaultValue": true
                }
              },
              "outgoing": {
                "subnetDeleteArray": null
              },
              "decorators": []
            },
            "actor": "Pronghorn",
            "groups": [],
            "nodeLocation": {
              "x": 1512,
              "y": 960
            }
          }
        },
        "transitions": {
          "212": {},
          "2432": {
            "workflow_end": {
              "type": "standard",
              "state": "success"
            }
          },
          "4685": {
            "65d7": {
              "type": "standard",
              "state": "success"
            }
          },
          "workflow_start": {
            "80a6": {
              "type": "standard",
              "state": "success"
            }
          },
          "workflow_end": {},
          "80a6": {
            "4685": {
              "type": "standard",
              "state": "success"
            }
          },
          "daf4": {
            "2432": {
              "type": "standard",
              "state": "failure"
            },
            "e7a5": {
              "state": "success",
              "type": "standard"
            }
          },
          "65d7": {
            "daf4": {
              "type": "standard",
              "state": "success"
            }
          },
          "d988": {
            "workflow_end": {
              "type": "standard",
              "state": "success"
            }
          },
          "e7a5": {
            "d988": {
              "state": "success",
              "type": "standard"
            }
          },
          "dfad": {},
          "50ac": {}
        },
        "inputSchema": {
          "type": "object",
          "properties": {
            "vpcId": {
              "type": [
                "array",
                "boolean",
                "null",
                "number",
                "object",
                "string"
              ]
            },
            "adapterId": {
              "type": [
                "array",
                "boolean",
                "null",
                "number",
                "object",
                "string"
              ]
            }
          },
          "required": [
            "vpcId",
            "adapterId"
          ]
        },
        "outputSchema": {
          "type": "object",
          "properties": {
            "vpcId": {
              "type": [
                "array",
                "boolean",
                "null",
                "number",
                "object",
                "string"
              ]
            },
            "adapterId": {
              "type": [
                "array",
                "boolean",
                "null",
                "number",
                "object",
                "string"
              ]
            },
            "_id": {
              "type": "string",
              "pattern": "^[0-9a-f]{24}$"
            },
            "initiator": {
              "type": "string"
            },
            "deletedSubnet": {
              "title": "result",
              "type": "array"
            }
          }
        },
        "created": "2022-03-31T14:36:27.377Z",
        "createdVersion": "5.40.5-2021.1.52.0",
        "created_by": {
          "provenance": "local_aaa",
          "username": "admin@pronghorn",
          "firstname": "admin",
          "inactive": false
        },
        "font_size": 12,
        "lastUpdatedVersion": "5.46.0-2023.1.19.0",
        "last_updated": "2023-11-22T16:04:12.067Z",
        "preAutomationTime": 0,
        "sla": 0,
        "type": "automation",
        "last_updated_by": {
          "provenance": "local_aaa",
          "username": "admin@pronghorn",
          "firstname": "admin",
          "inactive": false
        },
        "canvasVersion": 1.5,
        "tags": [],
        "groups": [],
        "migrationVersion": 2
      }
    },
    {
      "type": "workflow",
      "data": {
        "name": "Destroy VPC and EC2 Instance - AWS",
        "tasks": {
          "6253": {
            "name": "deleteVpc",
            "canvasName": "deleteVpc",
            "summary": "Delete VPC",
            "description": "Delete VPC",
            "location": "Adapter",
            "locationType": "Awsec2",
            "app": "Awsec2",
            "type": "automatic",
            "displayName": "Awsec2",
            "variables": {
              "incoming": {
                "vpcId": "$var.job.vpcId",
                "dryRun": false,
                "adapter_id": "$var.job.adapterId"
              },
              "outgoing": {
                "result": "$var.job.deletedVPC"
              },
              "error": "",
              "decorators": []
            },
            "groups": [],
            "actor": "Pronghorn",
            "x": 0.9344569288389513,
            "y": 0.15151515151515152,
            "scheduled": false,
            "nodeLocation": {
              "x": 2172,
              "y": 312
            }
          },
          "9653": {
            "name": "describeInstances",
            "canvasName": "describeInstances",
            "summary": "Get Instances for VPC",
            "description": "Get Instances with a VPC ID filter",
            "location": "Adapter",
            "locationType": "Awsec2",
            "app": "Awsec2",
            "type": "automatic",
            "displayName": "EC2",
            "variables": {
              "incoming": {
                "filter": "$var.1a70.vpcIdFilter",
                "instanceId": "",
                "dryRun": false,
                "maxResults": "",
                "nextToken": "",
                "adapter_id": "$var.job.adapterId"
              },
              "outgoing": {
                "result": ""
              }
            },
            "actor": "Pronghorn",
            "groups": [],
            "nodeLocation": {
              "x": -792,
              "y": 312
            }
          },
          "workflow_start": {
            "name": "workflow_start",
            "groups": [],
            "x": -0.6165172855313701,
            "y": 0.15011286681715574,
            "nodeLocation": {
              "x": -1644,
              "y": 312
            }
          },
          "workflow_end": {
            "name": "workflow_end",
            "groups": [],
            "x": 1.0124843945068664,
            "y": 0.15151515151515152,
            "nodeLocation": {
              "x": 2508,
              "y": 312
            }
          },
          "992b": {
            "name": "terminateInstances",
            "canvasName": "terminateInstances",
            "summary": "Terminate Instances",
            "description": "Terminates EC2 Instances",
            "location": "Adapter",
            "locationType": "Awsec2",
            "app": "Awsec2",
            "type": "automatic",
            "displayName": "Awsec2",
            "variables": {
              "incoming": {
                "instanceId": "$var.dd21.instanceIdArray",
                "dryRun": false,
                "adapter_id": "$var.job.adapterId"
              },
              "outgoing": {
                "result": null
              },
              "error": "",
              "decorators": []
            },
            "groups": [],
            "actor": "Pronghorn",
            "x": 0.06991260923845194,
            "y": 0.14858260019550343,
            "scheduled": false,
            "nodeLocation": {
              "x": 204,
              "y": 312
            }
          },
          "e0fe": {
            "name": "describeVpcs",
            "canvasName": "describeVpcs",
            "summary": "Describes one or more of your VPCs.",
            "description": "Describes one or more of your VPCs.",
            "location": "Adapter",
            "locationType": "Awsec2",
            "app": "Awsec2",
            "type": "automatic",
            "displayName": "Awsec2",
            "variables": {
              "incoming": {
                "filter": "",
                "vpcId": "$var.1a70.vpcIdArray",
                "dryRun": false,
                "nextToken": "",
                "maxResults": "",
                "adapter_id": "$var.job.adapterId"
              },
              "outgoing": {
                "result": null
              },
              "error": "",
              "decorators": []
            },
            "groups": [],
            "actor": "Pronghorn",
            "x": -0.3882646691635456,
            "y": 0.1544477028347996,
            "scheduled": false,
            "nodeLocation": {
              "x": -1092,
              "y": 312
            }
          },
          "9b69": {
            "name": "childJob",
            "canvasName": "childJob",
            "summary": "Delete Subnet",
            "description": "Delete subnet",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "task": "",
                "workflow": "Delete Subnets by VPC - AWS",
                "variables": {
                  "vpcId": {
                    "editable": false,
                    "task": "job",
                    "value": "vpcId"
                  },
                  "adapterId": {
                    "task": "job",
                    "value": "adapterId"
                  }
                },
                "data_array": "",
                "transformation": "",
                "loopType": ""
              },
              "outgoing": {
                "job_details": null
              }
            },
            "groups": [],
            "actor": "job",
            "x": 0.5967540574282147,
            "y": 0.1495601173020528,
            "nodeLocation": {
              "x": 1524,
              "y": 312
            }
          },
          "cac5": {
            "name": "childJob",
            "canvasName": "childJob",
            "summary": "Detach and Delete Internet Gateway",
            "description": "Detach and delete internet gateway",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "task": "",
                "workflow": "Detach and Delete Internet Gateways by VPC - AWS",
                "variables": {
                  "vpcId": {
                    "task": "job",
                    "value": "vpcId"
                  },
                  "adapterId": {
                    "task": "job",
                    "value": "adapterId"
                  }
                },
                "data_array": "",
                "transformation": "",
                "loopType": ""
              },
              "outgoing": {
                "job_details": null
              }
            },
            "groups": [],
            "actor": "job",
            "x": 0.7827715355805244,
            "y": 0.1495601173020528,
            "nodeLocation": {
              "x": 1848,
              "y": 312
            }
          },
          "8fbe": {
            "name": "delay",
            "canvasName": "delay",
            "summary": "Wait for Instance Termination",
            "description": "Wait for Instance Termination",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "time": 60
              },
              "outgoing": {
                "time_in_milliseconds": null
              },
              "error": "",
              "decorators": []
            },
            "groups": [],
            "x": 0.3021223470661673,
            "y": 0.28152492668621704,
            "scheduled": false,
            "nodeLocation": {
              "x": 864,
              "y": 420
            }
          },
          "ab1": {
            "name": "describeInstances",
            "canvasName": "describeInstances",
            "summary": "Confirm Instances Terminated",
            "description": "Get Instances with a VPC ID filter",
            "location": "Adapter",
            "locationType": "Awsec2",
            "app": "Awsec2",
            "type": "automatic",
            "displayName": "Awsec2",
            "variables": {
              "incoming": {
                "filter": "$var.1a70.vpcIdFilter",
                "instanceId": "",
                "dryRun": false,
                "maxResults": "",
                "nextToken": "",
                "adapter_id": "$var.job.adapterId"
              },
              "outgoing": {
                "result": null
              },
              "error": "",
              "decorators": []
            },
            "groups": [],
            "actor": "Pronghorn",
            "x": 0.19912609238451934,
            "y": 0.1495601173020528,
            "scheduled": false,
            "nodeLocation": {
              "x": 540,
              "y": 312
            }
          },
          "f957": {
            "name": "evaluation",
            "canvasName": "evaluation",
            "summary": "Check if instances are removed",
            "description": "Check if instances are removed",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "all_true_flag": false,
                "evaluation_groups": [
                  {
                    "all_true_flag": false,
                    "evaluations": [
                      {
                        "query": "response.DescribeInstancesResponse.reservationSet",
                        "operand_1": {
                          "variable": "result",
                          "task": "ab1"
                        },
                        "operator": "==",
                        "operand_2": {
                          "variable": "",
                          "task": "static"
                        }
                      }
                    ]
                  }
                ]
              },
              "outgoing": {
                "return_value": null
              }
            },
            "groups": [],
            "x": 0.30087390761548066,
            "y": 0.15053763440860216,
            "nodeLocation": {
              "x": 864,
              "y": 312
            }
          },
          "a879": {
            "name": "childJob",
            "canvasName": "childJob",
            "summary": "Delete Security Groups by VPC - AWS",
            "description": "Delete Security Groups by VPC - AWS",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "task": "",
                "workflow": "Delete Security Groups by VPC - AWS",
                "variables": {
                  "vpcId": {
                    "editable": false,
                    "task": "job",
                    "value": "vpcId"
                  },
                  "adapterId": {
                    "task": "job",
                    "value": "adapterId"
                  }
                },
                "data_array": "",
                "transformation": "",
                "loopType": ""
              },
              "outgoing": {
                "job_details": null
              }
            },
            "groups": [],
            "actor": "job",
            "x": 0.433832709113608,
            "y": 0.14858260019550343,
            "nodeLocation": {
              "x": 1200,
              "y": 312
            }
          },
          "1a70": {
            "name": "transformation",
            "canvasName": "transformation",
            "summary": "Prepare VPC ID",
            "description": "Prepare VPC Id",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "tr_id": "63e50af123ad20015d2a061b",
                "variableMap": {
                  "vpcId": "$var.job.vpcId"
                },
                "options": {
                  "extractOutput": false,
                  "validateIncoming": true,
                  "revertToDefaultValue": true
                }
              },
              "outgoing": {
                "vpcIdArray": null,
                "vpcIdFilter": null
              },
              "decorators": []
            },
            "groups": [],
            "x": -0.5224719101123596,
            "y": 0.14760508308895406,
            "task_name": "Prepare VPC ID",
            "retrySettings": null,
            "nodeLocation": {
              "x": -1404,
              "y": 312
            }
          },
          "0f2e": {
            "name": "evaluation",
            "canvasName": "evaluation",
            "summary": "Check If Reserved Instances Found",
            "description": "Check if reserved instances found",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "all_true_flag": false,
                "evaluation_groups": [
                  {
                    "all_true_flag": false,
                    "evaluations": [
                      {
                        "operand_1": {
                          "task": "9653",
                          "variable": "result"
                        },
                        "operand_2": {
                          "task": "static",
                          "variable": ""
                        },
                        "operator": "!=",
                        "query": "response.DescribeInstancesResponse.reservationSet",
                        "rightQuery": ""
                      }
                    ]
                  }
                ]
              },
              "outgoing": {
                "return_value": ""
              }
            },
            "actor": "Pronghorn",
            "groups": [],
            "nodeLocation": {
              "x": -480,
              "y": 312
            }
          },
          "da24": {
            "name": "stub",
            "canvasName": "stub",
            "summary": "No Reserved Instances Found",
            "description": "No Reserved Instances Found",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "automatic",
            "displayName": "Tools",
            "variables": {
              "incoming": {
                "type": "success",
                "delay": "",
                "response": ""
              },
              "outgoing": {
                "response": ""
              }
            },
            "actor": "Pronghorn",
            "groups": [],
            "nodeLocation": {
              "x": -480,
              "y": 180
            }
          },
          "dd21": {
            "name": "transformation",
            "canvasName": "transformation",
            "summary": "Process Instance Response",
            "description": "Process Instance Response",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "tr_id": "6535d4e97c6b51019f8f4142",
                "variableMap": {
                  "instanceResponse": "$var.9653.result"
                },
                "options": {
                  "extractOutput": true,
                  "validateIncoming": true,
                  "revertToDefaultValue": true
                }
              },
              "outgoing": {
                "instanceIdArray": null
              },
              "decorators": []
            },
            "actor": "Pronghorn",
            "groups": [],
            "nodeLocation": {
              "x": -132,
              "y": 312
            }
          },
          "62a6": {
            "name": "ViewData",
            "canvasName": "ViewData",
            "summary": "Show Error with Options",
            "description": "Show error with options",
            "location": "Application",
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "manual",
            "variables": {
              "incoming": {
                "header": "View Delete VPC Error",
                "message": "Failed to delete VPC. See error below. Do you want to retry?",
                "body": "$var.6253.error",
                "variables": "",
                "btn_success": "Yes",
                "btn_failure": "No"
              },
              "outgoing": {}
            },
            "view": "/workflow_engine/task/ViewData",
            "groups": [],
            "nodeLocation": {
              "x": 2172,
              "y": 408
            }
          }
        },
        "transitions": {
          "6253": {
            "workflow_end": {
              "type": "standard",
              "state": "success"
            },
            "62a6": {
              "type": "standard",
              "state": "error"
            }
          },
          "9653": {
            "0f2e": {
              "state": "success",
              "type": "standard"
            }
          },
          "workflow_start": {
            "1a70": {
              "type": "standard",
              "state": "success"
            }
          },
          "workflow_end": {},
          "992b": {
            "ab1": {
              "type": "standard",
              "state": "success"
            }
          },
          "e0fe": {
            "9653": {
              "state": "success",
              "type": "standard"
            }
          },
          "9b69": {
            "cac5": {
              "type": "standard",
              "state": "success"
            }
          },
          "cac5": {
            "6253": {
              "type": "standard",
              "state": "success"
            }
          },
          "8fbe": {
            "ab1": {
              "type": "revert",
              "state": "success"
            }
          },
          "ab1": {
            "f957": {
              "type": "standard",
              "state": "success"
            }
          },
          "f957": {
            "8fbe": {
              "type": "standard",
              "state": "failure"
            },
            "a879": {
              "type": "standard",
              "state": "success"
            }
          },
          "a879": {
            "9b69": {
              "type": "standard",
              "state": "success"
            }
          },
          "1a70": {
            "e0fe": {
              "type": "standard",
              "state": "success"
            }
          },
          "0f2e": {
            "da24": {
              "type": "standard",
              "state": "failure"
            },
            "dd21": {
              "state": "success",
              "type": "standard"
            }
          },
          "da24": {
            "workflow_end": {
              "state": "success",
              "type": "standard"
            }
          },
          "dd21": {
            "992b": {
              "state": "success",
              "type": "standard"
            }
          },
          "62a6": {
            "6253": {
              "state": "success",
              "type": "revert"
            }
          },
          "b2c3": {},
          "ca81": {}
        },
        "inputSchema": {
          "type": "object",
          "properties": {
            "vpcId": {
              "title": "vpcId",
              "type": "string"
            },
            "adapterId": {
              "type": [
                "array",
                "boolean",
                "null",
                "number",
                "object",
                "string"
              ]
            }
          },
          "required": [
            "vpcId",
            "adapterId"
          ]
        },
        "outputSchema": {
          "type": "object",
          "properties": {
            "vpcId": {
              "title": "vpcId",
              "type": "string"
            },
            "adapterId": {
              "type": [
                "array",
                "boolean",
                "null",
                "number",
                "object",
                "string"
              ]
            },
            "_id": {
              "type": "string",
              "pattern": "^[0-9a-f]{24}$"
            },
            "initiator": {
              "type": "string"
            },
            "deletedVPC": {
              "title": "result",
              "type": "object"
            }
          }
        },
        "type": "automation",
        "font_size": 12,
        "lastUpdatedVersion": "5.46.0-2023.1.19.0",
        "createdVersion": "5.46.0-2023.1.21.0",
        "preAutomationTime": 0,
        "sla": 0,
        "created_by": {
          "provenance": "local_aaa",
          "username": "admin@pronghorn",
          "firstname": "admin",
          "inactive": false
        },
        "last_updated": "2023-11-22T18:37:08.194Z",
        "created": "2023-10-17T18:10:18.488Z",
        "canvasVersion": 1.5,
        "last_updated_by": {
          "provenance": "local_aaa",
          "username": "admin@pronghorn",
          "firstname": "admin",
          "inactive": false
        },
        "tags": [],
        "groups": [],
        "migrationVersion": 2
      }
    },
    {
      "type": "workflow",
      "data": {
        "name": "Detach and Delete Internet Gateways by VPC - AWS",
        "tasks": {
          "2432": {
            "name": "stub",
            "canvasName": "stub",
            "summary": "No Internet Gateways Found",
            "description": "No Internet Gateways Found",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "automatic",
            "displayName": "Tools",
            "variables": {
              "incoming": {
                "type": "success",
                "delay": "",
                "response": ""
              },
              "outgoing": {
                "response": null
              },
              "error": "",
              "decorators": []
            },
            "groups": [],
            "actor": "Pronghorn",
            "x": 0.53646408839779,
            "y": 0.3493975903614458,
            "scheduled": false,
            "nodeLocation": {
              "x": 1248,
              "y": 840
            }
          },
          "3151": {
            "name": "describeInternetGateways",
            "canvasName": "describeInternetGateways",
            "summary": "Find Internet Gateways for VPC",
            "description": "Find Internet Gateways for VPC",
            "location": "Adapter",
            "locationType": "Awsec2",
            "app": "Awsec2",
            "type": "automatic",
            "displayName": "Awsec2",
            "variables": {
              "incoming": {
                "filter": "$var.4685.pushedArray",
                "dryRun": "",
                "internetGatewayId": "",
                "nextToken": "",
                "maxResults": "",
                "adapter_id": "$var.job.adapterId"
              },
              "outgoing": {
                "result": null
              },
              "error": "",
              "decorators": []
            },
            "groups": [],
            "actor": "Pronghorn",
            "x": 0.2303867403314917,
            "y": 0.5030120481927711,
            "scheduled": false,
            "nodeLocation": {
              "x": 936,
              "y": 948
            }
          },
          "4685": {
            "name": "arrayPush",
            "canvasName": "push",
            "summary": "Filter Array",
            "description": "Filter Array",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "automatic",
            "displayName": "Array",
            "variables": {
              "incoming": {
                "arr": [],
                "elementN": "$var.80a6.merged_object"
              },
              "outgoing": {
                "pushedArray": null
              },
              "error": "",
              "decorators": []
            },
            "groups": [],
            "actor": "Pronghorn",
            "x": 0.12320441988950276,
            "y": 0.5060240963855421,
            "scheduled": false,
            "nodeLocation": {
              "x": 624,
              "y": 948
            }
          },
          "workflow_start": {
            "name": "workflow_start",
            "groups": [],
            "x": 0,
            "y": 0.5,
            "nodeLocation": {
              "x": 72,
              "y": 948
            }
          },
          "workflow_end": {
            "name": "workflow_end",
            "groups": [],
            "x": 0.6977900552486188,
            "y": 0.5100401606425703,
            "nodeLocation": {
              "x": 2424,
              "y": 948
            }
          },
          "80a6": {
            "name": "merge",
            "canvasName": "merge",
            "summary": "VPC ID Filter",
            "description": "VPC ID Filter",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "data_to_merge": [
                  {
                    "key": "name",
                    "value": {
                      "task": "static",
                      "variable": "attachment.vpc-id",
                      "editable": true
                    }
                  },
                  {
                    "key": "value",
                    "value": {
                      "task": "job",
                      "variable": "vpcId",
                      "editable": true
                    }
                  }
                ]
              },
              "outgoing": {
                "merged_object": null
              }
            },
            "groups": [],
            "x": 0.05966850828729282,
            "y": 0.5030120481927711,
            "nodeLocation": {
              "x": 312,
              "y": 948
            }
          },
          "daf4": {
            "name": "evaluation",
            "canvasName": "evaluation",
            "summary": "Check If Internet Gateways Found",
            "description": "Check if internet gateways found",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "all_true_flag": false,
                "evaluation_groups": [
                  {
                    "all_true_flag": false,
                    "evaluations": [
                      {
                        "query": "response.DescribeInternetGatewaysResponse.internetGatewaySet",
                        "operand_1": {
                          "variable": "result",
                          "task": "3151"
                        },
                        "operator": "!=",
                        "operand_2": {
                          "variable": "",
                          "task": "static"
                        }
                      }
                    ]
                  }
                ]
              },
              "outgoing": {
                "return_value": null
              }
            },
            "groups": [],
            "x": 0.31767955801104975,
            "y": 0.5140562248995983,
            "nodeLocation": {
              "x": 1248,
              "y": 948
            }
          },
          "606b": {
            "name": "query",
            "canvasName": "query",
            "summary": "Get Internet Gateway ID",
            "description": "Get Internet Gateway ID",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "response.DescribeInternetGatewaysResponse.internetGatewaySet.item[0].internetGatewayId",
                "obj": "$var.3151.result"
              },
              "outgoing": {
                "return_data": null
              },
              "error": "",
              "decorators": []
            },
            "groups": [],
            "x": 0.37734806629834255,
            "y": 0.5180722891566265,
            "scheduled": false,
            "nodeLocation": {
              "x": 1560,
              "y": 948
            }
          },
          "ccb2": {
            "name": "detachInternetGateway",
            "canvasName": "detachInternetGateway",
            "summary": "Detach Internet Gateway from VPC",
            "description": "Detach Internet Gateway from VPC",
            "location": "Adapter",
            "locationType": "Awsec2",
            "app": "Awsec2",
            "type": "automatic",
            "displayName": "Awsec2",
            "variables": {
              "incoming": {
                "dryRun": false,
                "internetGatewayId": "$var.606b.return_data",
                "vpcId": "$var.job.vpcId",
                "adapter_id": "$var.job.adapterId"
              },
              "outgoing": {
                "result": null
              },
              "error": "",
              "decorators": []
            },
            "groups": [],
            "actor": "Pronghorn",
            "x": 0.4734806629834254,
            "y": 0.5110441767068273,
            "scheduled": false,
            "nodeLocation": {
              "x": 1872,
              "y": 948
            }
          },
          "61f9": {
            "name": "deleteInternetGateway",
            "canvasName": "deleteInternetGateway",
            "summary": "Delete Internet Gateway",
            "description": "Delete Internet Gateway",
            "location": "Adapter",
            "locationType": "Awsec2",
            "app": "Awsec2",
            "type": "automatic",
            "displayName": "Awsec2",
            "variables": {
              "incoming": {
                "dryRun": false,
                "internetGatewayId": "$var.606b.return_data",
                "adapter_id": "$var.job.adapterId"
              },
              "outgoing": {
                "result": "$var.job.deletedInternetGateway"
              },
              "error": "",
              "decorators": []
            },
            "groups": [],
            "actor": "Pronghorn",
            "x": 0.592817679558011,
            "y": 0.5070281124497992,
            "scheduled": false,
            "nodeLocation": {
              "x": 2184,
              "y": 948
            }
          }
        },
        "transitions": {
          "212": {},
          "2432": {
            "workflow_end": {
              "type": "standard",
              "state": "success"
            }
          },
          "3151": {
            "daf4": {
              "type": "standard",
              "state": "success"
            }
          },
          "4685": {
            "3151": {
              "type": "standard",
              "state": "success"
            }
          },
          "workflow_start": {
            "80a6": {
              "type": "standard",
              "state": "success"
            }
          },
          "workflow_end": {},
          "80a6": {
            "4685": {
              "type": "standard",
              "state": "success"
            }
          },
          "daf4": {
            "2432": {
              "type": "standard",
              "state": "failure"
            },
            "606b": {
              "type": "standard",
              "state": "success"
            }
          },
          "606b": {
            "ccb2": {
              "type": "standard",
              "state": "success"
            }
          },
          "ccb2": {
            "61f9": {
              "type": "standard",
              "state": "success"
            }
          },
          "61f9": {
            "workflow_end": {
              "type": "standard",
              "state": "success"
            }
          },
          "dfad": {},
          "50ac": {},
          "de1e": {},
          "419e": {},
          "b96d": {}
        },
        "inputSchema": {
          "type": "object",
          "properties": {
            "adapterId": {
              "type": [
                "array",
                "boolean",
                "null",
                "number",
                "object",
                "string"
              ]
            },
            "vpcId": {
              "title": "vpcId",
              "type": "string"
            }
          },
          "required": [
            "adapterId",
            "vpcId"
          ]
        },
        "outputSchema": {
          "type": "object",
          "properties": {
            "adapterId": {
              "type": [
                "array",
                "boolean",
                "null",
                "number",
                "object",
                "string"
              ]
            },
            "vpcId": {
              "title": "vpcId",
              "type": "string"
            },
            "_id": {
              "type": "string",
              "pattern": "^[0-9a-f]{24}$"
            },
            "initiator": {
              "type": "string"
            },
            "deletedInternetGateway": {
              "title": "result",
              "type": "object"
            }
          }
        },
        "created": "2022-03-31T14:44:06.846Z",
        "createdVersion": "5.40.5-2021.1.52.0",
        "created_by": {
          "provenance": "local_aaa",
          "username": "admin@pronghorn",
          "firstname": "admin",
          "inactive": false
        },
        "font_size": 12,
        "lastUpdatedVersion": "5.46.0-2023.1.19.0",
        "last_updated": "2023-11-22T15:33:54.835Z",
        "last_updated_by": {
          "provenance": "local_aaa",
          "username": "admin@pronghorn",
          "firstname": "admin",
          "inactive": false
        },
        "preAutomationTime": 0,
        "sla": 0,
        "type": "automation",
        "canvasVersion": 1.5,
        "tags": [],
        "groups": [],
        "migrationVersion": 2
      }
    },
    {
      "type": "transformation",
      "data": {
        "_id": "63e641b023ad20015d2a0621",
        "name": "Build EC2 Tag Data",
        "description": "",
        "incoming": [
          {
            "$id": "vpcName",
            "type": "string"
          },
          {
            "$id": "launchResponse",
            "type": "object",
            "properties": {
              "response": {
                "type": "object",
                "properties": {
                  "RunInstancesResponse": {
                    "type": "object",
                    "properties": {
                      "instancesSet": {
                        "type": "object",
                        "properties": {
                          "item": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "instanceId": {
                                  "type": "string",
                                  "examples": [
                                    "i-0e5a940bc1fc03f1a"
                                  ]
                                }
                              },
                              "required": []
                            }
                          }
                        },
                        "required": []
                      }
                    },
                    "required": []
                  }
                },
                "required": []
              }
            },
            "required": []
          }
        ],
        "outgoing": [
          {
            "$id": "ec2Tags",
            "type": "array"
          },
          {
            "$id": "instanceIdArray",
            "type": "array"
          }
        ],
        "steps": [
          {
            "id": 26,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "vpcName",
              "ptr": ""
            },
            "to": {
              "location": "method",
              "name": 25,
              "ptr": "/args/1/value"
            },
            "context": "#"
          },
          {
            "id": 32,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "launchResponse",
              "ptr": "/response/RunInstancesResponse/instancesSet/item"
            },
            "to": {
              "location": "method",
              "name": 31,
              "ptr": "/args/0/value"
            },
            "context": "#"
          },
          {
            "id": 25,
            "type": "method",
            "library": "String",
            "method": "concat",
            "args": [
              "Apache Web Server for ",
              null
            ],
            "view": {
              "row": 1,
              "col": 1
            },
            "context": "#"
          },
          {
            "id": 31,
            "type": "method",
            "library": "Array",
            "method": "getIndex",
            "args": [
              null,
              0
            ],
            "view": {
              "row": 2,
              "col": 1
            },
            "context": "#"
          },
          {
            "id": 27,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 25,
              "ptr": "/return"
            },
            "to": {
              "location": "function",
              "name": 21,
              "ptr": "/args/1/value"
            },
            "context": "#"
          },
          {
            "id": 34,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 31,
              "ptr": "/return"
            },
            "to": {
              "location": "method",
              "name": 33,
              "ptr": "/args/0/value"
            },
            "context": "#"
          },
          {
            "id": 21,
            "type": "function",
            "function": "buildEc2Tags",
            "args": [
              "Name",
              ""
            ],
            "view": {
              "row": 1,
              "col": 2
            }
          },
          {
            "id": 33,
            "type": "method",
            "library": "Object",
            "method": "getProperty",
            "args": [
              null,
              "instanceId"
            ],
            "view": {
              "row": 2,
              "col": 2
            },
            "context": "#"
          },
          {
            "id": 23,
            "type": "assign",
            "from": {
              "location": "function",
              "name": 21,
              "ptr": "/return/ec2Tags"
            },
            "to": {
              "location": "declaration",
              "name": 22,
              "ptr": "/args/0/value"
            },
            "context": "#"
          },
          {
            "id": 36,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 33,
              "ptr": "/return"
            },
            "to": {
              "location": "declaration",
              "name": 35,
              "ptr": "/args/0/value"
            },
            "context": "#"
          },
          {
            "id": 22,
            "type": "declaration",
            "library": "Array",
            "method": "new Array",
            "args": [
              null
            ],
            "view": {
              "row": 1,
              "col": 3
            },
            "context": "#",
            "polymorphIndex": 0
          },
          {
            "id": 35,
            "type": "declaration",
            "library": "Array",
            "method": "new Array",
            "args": [
              null
            ],
            "view": {
              "row": 2,
              "col": 3
            },
            "context": "#",
            "polymorphIndex": 0
          },
          {
            "id": 24,
            "type": "assign",
            "from": {
              "location": "declaration",
              "name": 22,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "ec2Tags",
              "ptr": ""
            },
            "context": "#"
          },
          {
            "id": 37,
            "type": "assign",
            "from": {
              "location": "declaration",
              "name": 35,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "instanceIdArray",
              "ptr": ""
            },
            "context": "#"
          }
        ],
        "functions": [
          {
            "incoming": [
              {
                "type": "object",
                "properties": {
                  "sourceSubnetCidrMask": {
                    "type": "integer",
                    "examples": [
                      32
                    ]
                  },
                  "port": {
                    "type": "integer",
                    "examples": [
                      443
                    ]
                  },
                  "sourceIp": {
                    "type": "string",
                    "examples": [
                      "1%2E2%2E3%2E4"
                    ],
                    "format": "ipv4"
                  },
                  "protocol": {
                    "type": "string",
                    "examples": [
                      "TCP"
                    ]
                  }
                },
                "required": [],
                "$id": "currentValue"
              },
              {
                "title": "index",
                "type": "number",
                "optional": true,
                "$id": "index"
              },
              {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "sourceSubnetCidrMask": {
                      "type": "integer",
                      "examples": [
                        32
                      ]
                    },
                    "port": {
                      "type": "integer",
                      "examples": [
                        443
                      ]
                    },
                    "sourceIp": {
                      "type": "string",
                      "examples": [
                        "1%2E2%2E3%2E4"
                      ],
                      "format": "ipv4"
                    },
                    "protocol": {
                      "type": "string",
                      "examples": [
                        "TCP"
                      ]
                    }
                  },
                  "required": []
                },
                "$id": "array",
                "optional": true
              },
              {
                "$id": "thisArg",
                "type": "object",
                "properties": {},
                "isContext": true,
                "isThis": true,
                "isIndexed": true
              }
            ],
            "outgoing": [
              {
                "title": "newValue",
                "type": [
                  "array",
                  "boolean",
                  "number",
                  "integer",
                  "string",
                  "object",
                  "null"
                ],
                "editable": true,
                "$id": "newValue"
              }
            ],
            "steps": [
              {
                "id": 1,
                "type": "function",
                "function": "buildRule",
                "args": [
                  null,
                  null,
                  null,
                  null
                ],
                "view": {
                  "row": 1,
                  "col": 1
                },
                "context": "#"
              },
              {
                "id": 2,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "currentValue",
                  "ptr": "/sourceSubnetCidrMask"
                },
                "to": {
                  "location": "function",
                  "name": 1,
                  "ptr": "/args/0/value"
                },
                "context": "#"
              },
              {
                "id": 3,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "currentValue",
                  "ptr": "/port"
                },
                "to": {
                  "location": "function",
                  "name": 1,
                  "ptr": "/args/1/value"
                },
                "context": "#"
              },
              {
                "id": 4,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "currentValue",
                  "ptr": "/sourceIp"
                },
                "to": {
                  "location": "function",
                  "name": 1,
                  "ptr": "/args/2/value"
                },
                "context": "#"
              },
              {
                "id": 5,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "currentValue",
                  "ptr": "/protocol"
                },
                "to": {
                  "location": "function",
                  "name": 1,
                  "ptr": "/args/3/value"
                },
                "context": "#"
              },
              {
                "id": 6,
                "type": "assign",
                "from": {
                  "location": "function",
                  "name": 1,
                  "ptr": "/return/rule"
                },
                "to": {
                  "location": "outgoing",
                  "name": "newValue",
                  "ptr": ""
                },
                "context": "#"
              }
            ],
            "functions": [],
            "name": "buildRuleList",
            "view": {
              "col": 2,
              "row": 4
            },
            "id": "buildRuleList",
            "comments": []
          },
          {
            "incoming": [
              {
                "$id": "sourceSubnetCidrMask",
                "type": "number"
              },
              {
                "$id": "port",
                "type": "number"
              },
              {
                "$id": "sourceIp",
                "type": "string"
              },
              {
                "$id": "protocol",
                "type": "string"
              }
            ],
            "outgoing": [
              {
                "$id": "rule",
                "type": "object",
                "properties": {
                  "sourceSubnetCidrMask": {
                    "type": "number",
                    "examples": [
                      32
                    ]
                  },
                  "port": {
                    "type": "number",
                    "examples": [
                      443
                    ]
                  },
                  "sourceIp": {
                    "type": "string",
                    "examples": [
                      "192%2E168%2E30%2E10"
                    ],
                    "format": "ipv4"
                  },
                  "protocol": {
                    "type": "string",
                    "examples": [
                      "TCP"
                    ]
                  }
                },
                "required": []
              }
            ],
            "steps": [
              {
                "id": 1,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "sourceSubnetCidrMask",
                  "ptr": ""
                },
                "to": {
                  "location": "outgoing",
                  "name": "rule",
                  "ptr": "/sourceSubnetCidrMask"
                },
                "context": "#"
              },
              {
                "id": 2,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "port",
                  "ptr": ""
                },
                "to": {
                  "location": "outgoing",
                  "name": "rule",
                  "ptr": "/port"
                },
                "context": "#"
              },
              {
                "id": 3,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "sourceIp",
                  "ptr": ""
                },
                "to": {
                  "location": "outgoing",
                  "name": "rule",
                  "ptr": "/sourceIp"
                },
                "context": "#"
              },
              {
                "id": 4,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "protocol",
                  "ptr": ""
                },
                "to": {
                  "location": "outgoing",
                  "name": "rule",
                  "ptr": "/protocol"
                },
                "context": "#"
              }
            ],
            "functions": [],
            "name": "buildRule",
            "view": {
              "col": 2,
              "row": 4
            },
            "id": "buildRule",
            "comments": []
          },
          {
            "incoming": [
              {
                "$id": "Key",
                "type": "string"
              },
              {
                "$id": "Value",
                "type": "string"
              }
            ],
            "outgoing": [
              {
                "$id": "ec2Tags",
                "type": "object",
                "properties": {
                  "Key": {
                    "type": "string",
                    "examples": [
                      "Name"
                    ]
                  },
                  "Value": {
                    "type": "string",
                    "examples": [
                      "ec2"
                    ]
                  }
                },
                "required": []
              }
            ],
            "steps": [
              {
                "id": 1,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "Key",
                  "ptr": ""
                },
                "to": {
                  "location": "outgoing",
                  "name": "ec2Tags",
                  "ptr": "/Key"
                },
                "context": "#"
              },
              {
                "id": 2,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "Value",
                  "ptr": ""
                },
                "to": {
                  "location": "outgoing",
                  "name": "ec2Tags",
                  "ptr": "/Value"
                },
                "context": "#"
              }
            ],
            "functions": [],
            "name": "buildEc2Tags",
            "view": {
              "col": 1,
              "row": 4
            },
            "id": "buildEc2Tags",
            "comments": []
          }
        ],
        "comments": [],
        "view": {
          "col": 3,
          "row": 8
        },
        "created": "2023-11-21T19:36:03.859Z",
        "createdBy": {
          "_id": "652054b92c281c82e5b4c8b4",
          "provenance": "local_aaa",
          "username": "admin@pronghorn"
        },
        "lastUpdated": "2023-11-21T21:18:27.652Z",
        "lastUpdatedBy": {
          "_id": "652054b92c281c82e5b4c8b4",
          "provenance": "local_aaa",
          "username": "admin@pronghorn"
        },
        "version": "4.1.2-2023.1.10",
        "tags": []
      }
    },
    {
      "type": "transformation",
      "data": {
        "_id": "652ff25180403501cbadcbe5",
        "name": "Build Ingress Rule List",
        "description": "",
        "incoming": [
          {
            "$id": "ruleList",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "sourceSubnetCidrMask": {
                  "type": "number",
                  "examples": [
                    32
                  ]
                },
                "port": {
                  "type": "number",
                  "examples": [
                    443
                  ]
                },
                "sourceIp": {
                  "type": "string",
                  "examples": [
                    "1.2.3.4"
                  ],
                  "format": "ipv4"
                },
                "protocol": {
                  "type": "string",
                  "examples": [
                    "TCP"
                  ]
                }
              },
              "required": []
            }
          },
          {
            "$id": "groupId",
            "type": "string"
          },
          {
            "$id": "adapterId",
            "type": "string"
          }
        ],
        "outgoing": [
          {
            "$id": "ruleList",
            "type": "array"
          }
        ],
        "steps": [
          {
            "id": 2,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "ruleList",
              "ptr": ""
            },
            "to": {
              "location": "method",
              "name": 1,
              "ptr": "/args/0/value"
            },
            "context": "#"
          },
          {
            "id": 5,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "groupId",
              "ptr": ""
            },
            "to": {
              "location": "method",
              "name": 1,
              "ptr": "/args/2/value"
            },
            "context": "#"
          },
          {
            "id": 1,
            "type": "method",
            "library": "Array",
            "method": "map",
            "args": [
              null,
              "buildRuleForSecurityGroup",
              null,
              null
            ],
            "view": {
              "row": 1,
              "col": 1
            },
            "context": "#"
          },
          {
            "id": 3,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 1,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "ruleList",
              "ptr": ""
            },
            "context": "#"
          },
          {
            "id": 6,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "adapterId",
              "ptr": ""
            },
            "to": {
              "location": "method",
              "name": 1,
              "ptr": "/args/3/value"
            },
            "context": "#"
          }
        ],
        "functions": [
          {
            "incoming": [
              {
                "type": "object",
                "properties": {
                  "sourceSubnetCidrMask": {
                    "type": "number",
                    "examples": [
                      32
                    ]
                  },
                  "port": {
                    "type": "number",
                    "examples": [
                      443
                    ]
                  },
                  "sourceIp": {
                    "type": "string",
                    "examples": [
                      "1%2E2%2E3%2E4"
                    ],
                    "format": "ipv4"
                  },
                  "protocol": {
                    "type": "string",
                    "examples": [
                      "TCP"
                    ]
                  }
                },
                "required": [],
                "$id": "currentValue"
              },
              {
                "title": "index",
                "type": "number",
                "optional": true,
                "$id": "index"
              },
              {
                "$id": "array",
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "sourceSubnetCidrMask": {
                      "type": "number",
                      "examples": [
                        32
                      ]
                    },
                    "port": {
                      "type": "number",
                      "examples": [
                        443
                      ]
                    },
                    "sourceIp": {
                      "type": "string",
                      "examples": [
                        "1%2E2%2E3%2E4"
                      ],
                      "format": "ipv4"
                    },
                    "protocol": {
                      "type": "string",
                      "examples": [
                        "TCP"
                      ]
                    }
                  },
                  "required": []
                },
                "optional": true
              },
              {
                "$id": "thisArg",
                "type": "object",
                "properties": {
                  "0_groupId": {
                    "$id": "groupId",
                    "type": "string"
                  },
                  "1_adapterId": {
                    "$id": "adapterId",
                    "type": "string"
                  }
                },
                "isContext": true,
                "isIndexed": true
              }
            ],
            "outgoing": [
              {
                "$id": "ruleList",
                "type": "object",
                "properties": {
                  "sourceCidrIp": {
                    "type": "string"
                  },
                  "toPort": {
                    "type": "number",
                    "examples": [
                      443
                    ]
                  },
                  "fromPort": {
                    "type": "number",
                    "examples": [
                      443
                    ]
                  },
                  "ipProtocol": {
                    "type": "string",
                    "examples": [
                      "TCP"
                    ]
                  },
                  "groupId": {
                    "type": "string"
                  },
                  "adapterId": {
                    "type": "string"
                  }
                },
                "required": []
              }
            ],
            "steps": [
              {
                "id": 16,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "thisArg",
                  "ptr": "/0_groupId"
                },
                "to": {
                  "location": "outgoing",
                  "name": "ruleList",
                  "ptr": "/groupId"
                },
                "context": "#"
              },
              {
                "id": 2,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "currentValue",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/args/0/value"
                },
                "context": "#"
              },
              {
                "id": 4,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "currentValue",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 3,
                  "ptr": "/args/0/value"
                },
                "context": "#"
              },
              {
                "id": 6,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "currentValue",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 5,
                  "ptr": "/args/0/value"
                },
                "context": "#"
              },
              {
                "id": 8,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "currentValue",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 7,
                  "ptr": "/args/0/value"
                },
                "context": "#"
              },
              {
                "id": 1,
                "type": "method",
                "library": "Object",
                "method": "getProperty",
                "args": [
                  null,
                  "sourceSubnetCidrMask"
                ],
                "view": {
                  "row": 1,
                  "col": 1
                },
                "context": "#"
              },
              {
                "id": 3,
                "type": "method",
                "library": "Object",
                "method": "getProperty",
                "args": [
                  null,
                  "port"
                ],
                "view": {
                  "row": 2,
                  "col": 1
                },
                "context": "#"
              },
              {
                "id": 5,
                "type": "method",
                "library": "Object",
                "method": "getProperty",
                "args": [
                  null,
                  "sourceIp"
                ],
                "view": {
                  "row": 3,
                  "col": 1
                },
                "context": "#"
              },
              {
                "id": 7,
                "type": "method",
                "library": "Object",
                "method": "getProperty",
                "args": [
                  null,
                  "protocol"
                ],
                "view": {
                  "row": 4,
                  "col": 1
                },
                "context": "#"
              },
              {
                "id": 10,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 5,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 9,
                  "ptr": "/args/0/value"
                },
                "context": "#"
              },
              {
                "id": 11,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 9,
                  "ptr": "/args/2/value"
                },
                "context": "#"
              },
              {
                "id": 9,
                "type": "method",
                "library": "String",
                "method": "concat",
                "args": [
                  null,
                  "/",
                  null
                ],
                "view": {
                  "row": 1,
                  "col": 2
                },
                "context": "#"
              },
              {
                "id": 13,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 3,
                  "ptr": "/return"
                },
                "to": {
                  "location": "outgoing",
                  "name": "ruleList",
                  "ptr": "/toPort"
                },
                "context": "#"
              },
              {
                "id": 14,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 3,
                  "ptr": "/return"
                },
                "to": {
                  "location": "outgoing",
                  "name": "ruleList",
                  "ptr": "/fromPort"
                },
                "context": "#"
              },
              {
                "id": 15,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 7,
                  "ptr": "/return"
                },
                "to": {
                  "location": "outgoing",
                  "name": "ruleList",
                  "ptr": "/ipProtocol"
                },
                "context": "#"
              },
              {
                "id": 12,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 9,
                  "ptr": "/return"
                },
                "to": {
                  "location": "outgoing",
                  "name": "ruleList",
                  "ptr": "/sourceCidrIp"
                },
                "context": "#"
              },
              {
                "id": 17,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "thisArg",
                  "ptr": "/1_adapterId"
                },
                "to": {
                  "location": "outgoing",
                  "name": "ruleList",
                  "ptr": "/adapterId"
                },
                "context": "#"
              }
            ],
            "functions": [],
            "name": "buildRuleForSecurityGroup",
            "view": {
              "col": 3,
              "row": 5
            },
            "id": "buildRuleForSecurityGroup",
            "comments": []
          }
        ],
        "comments": [],
        "view": {
          "col": 3,
          "row": 5
        },
        "created": "2023-10-18T14:57:21.607Z",
        "createdBy": {
          "_id": "652054b92c281c82e5b4c8b4",
          "provenance": "local_aaa",
          "username": "admin@pronghorn"
        },
        "lastUpdated": "2023-10-18T16:13:49.732Z",
        "lastUpdatedBy": {
          "_id": "652054b92c281c82e5b4c8b4",
          "provenance": "local_aaa",
          "username": "admin@pronghorn"
        },
        "version": "4.1.2-2023.1.10",
        "tags": []
      }
    },
    {
      "type": "transformation",
      "data": {
        "_id": "63e6410623ad20015d2a0620",
        "name": "Build Security Group Rule List",
        "description": "",
        "incoming": [
          {
            "$id": "ingressRules",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "sourceSubnetCidrMask": {
                  "type": "number",
                  "examples": [
                    32
                  ]
                },
                "port": {
                  "type": "number",
                  "examples": [
                    443
                  ]
                },
                "sourceIp": {
                  "type": "string",
                  "examples": [
                    "1%2E2%2E3%2E4"
                  ],
                  "format": "ipv4"
                },
                "protocol": {
                  "type": "string",
                  "examples": [
                    "TCP"
                  ]
                }
              },
              "required": []
            }
          }
        ],
        "outgoing": [
          {
            "$id": "ruleList",
            "type": "array"
          }
        ],
        "steps": [
          {
            "id": 1,
            "type": "method",
            "library": "Array",
            "method": "map",
            "args": [
              null,
              "buildRuleList"
            ],
            "view": {
              "row": 1,
              "col": 1
            },
            "context": "#"
          },
          {
            "id": 3,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 1,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "ruleList",
              "ptr": ""
            },
            "context": "#"
          },
          {
            "id": 4,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "ingressRules",
              "ptr": ""
            },
            "to": {
              "location": "method",
              "name": 1,
              "ptr": "/args/0/value"
            },
            "context": "#"
          }
        ],
        "functions": [
          {
            "incoming": [
              {
                "type": "object",
                "properties": {
                  "sourceSubnetCidrMask": {
                    "type": "integer",
                    "examples": [
                      32
                    ]
                  },
                  "port": {
                    "type": "integer",
                    "examples": [
                      443
                    ]
                  },
                  "sourceIp": {
                    "type": "string",
                    "examples": [
                      "1%2E2%2E3%2E4"
                    ],
                    "format": "ipv4"
                  },
                  "protocol": {
                    "type": "string",
                    "examples": [
                      "TCP"
                    ]
                  }
                },
                "required": [],
                "$id": "currentValue"
              },
              {
                "title": "index",
                "type": "number",
                "optional": true,
                "$id": "index"
              },
              {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "sourceSubnetCidrMask": {
                      "type": "integer",
                      "examples": [
                        32
                      ]
                    },
                    "port": {
                      "type": "integer",
                      "examples": [
                        443
                      ]
                    },
                    "sourceIp": {
                      "type": "string",
                      "examples": [
                        "1%2E2%2E3%2E4"
                      ],
                      "format": "ipv4"
                    },
                    "protocol": {
                      "type": "string",
                      "examples": [
                        "TCP"
                      ]
                    }
                  },
                  "required": []
                },
                "$id": "array",
                "optional": true
              },
              {
                "$id": "thisArg",
                "type": "object",
                "properties": {},
                "isContext": true
              }
            ],
            "outgoing": [
              {
                "title": "newValue",
                "type": [
                  "array",
                  "boolean",
                  "number",
                  "integer",
                  "string",
                  "object",
                  "null"
                ],
                "editable": true,
                "$id": "newValue"
              }
            ],
            "steps": [
              {
                "id": 1,
                "type": "function",
                "function": "buildRule",
                "args": [
                  null,
                  null,
                  null,
                  null
                ],
                "view": {
                  "row": 1,
                  "col": 1
                },
                "context": "#"
              },
              {
                "id": 2,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "currentValue",
                  "ptr": "/sourceSubnetCidrMask"
                },
                "to": {
                  "location": "function",
                  "name": 1,
                  "ptr": "/args/0/value"
                },
                "context": "#"
              },
              {
                "id": 3,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "currentValue",
                  "ptr": "/port"
                },
                "to": {
                  "location": "function",
                  "name": 1,
                  "ptr": "/args/1/value"
                },
                "context": "#"
              },
              {
                "id": 4,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "currentValue",
                  "ptr": "/sourceIp"
                },
                "to": {
                  "location": "function",
                  "name": 1,
                  "ptr": "/args/2/value"
                },
                "context": "#"
              },
              {
                "id": 5,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "currentValue",
                  "ptr": "/protocol"
                },
                "to": {
                  "location": "function",
                  "name": 1,
                  "ptr": "/args/3/value"
                },
                "context": "#"
              },
              {
                "id": 6,
                "type": "assign",
                "from": {
                  "location": "function",
                  "name": 1,
                  "ptr": "/return/rule"
                },
                "to": {
                  "location": "outgoing",
                  "name": "newValue",
                  "ptr": ""
                },
                "context": "#"
              }
            ],
            "functions": [],
            "name": "buildRuleList",
            "view": {
              "col": 2,
              "row": 4
            },
            "id": "buildRuleList",
            "comments": []
          },
          {
            "incoming": [
              {
                "$id": "sourceSubnetCidrMask",
                "type": "number"
              },
              {
                "$id": "port",
                "type": "number"
              },
              {
                "$id": "sourceIp",
                "type": "string"
              },
              {
                "$id": "protocol",
                "type": "string"
              }
            ],
            "outgoing": [
              {
                "$id": "rule",
                "type": "object",
                "properties": {
                  "sourceSubnetCidrMask": {
                    "type": "number",
                    "examples": [
                      32
                    ]
                  },
                  "port": {
                    "type": "number",
                    "examples": [
                      443
                    ]
                  },
                  "sourceIp": {
                    "type": "string",
                    "examples": [
                      "192%2E168%2E30%2E10"
                    ],
                    "format": "ipv4"
                  },
                  "protocol": {
                    "type": "string",
                    "examples": [
                      "TCP"
                    ]
                  }
                },
                "required": []
              }
            ],
            "steps": [
              {
                "id": 1,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "sourceSubnetCidrMask",
                  "ptr": ""
                },
                "to": {
                  "location": "outgoing",
                  "name": "rule",
                  "ptr": "/sourceSubnetCidrMask"
                },
                "context": "#"
              },
              {
                "id": 2,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "port",
                  "ptr": ""
                },
                "to": {
                  "location": "outgoing",
                  "name": "rule",
                  "ptr": "/port"
                },
                "context": "#"
              },
              {
                "id": 3,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "sourceIp",
                  "ptr": ""
                },
                "to": {
                  "location": "outgoing",
                  "name": "rule",
                  "ptr": "/sourceIp"
                },
                "context": "#"
              },
              {
                "id": 4,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "protocol",
                  "ptr": ""
                },
                "to": {
                  "location": "outgoing",
                  "name": "rule",
                  "ptr": "/protocol"
                },
                "context": "#"
              }
            ],
            "functions": [],
            "name": "buildRule",
            "view": {
              "col": 2,
              "row": 4
            },
            "id": "buildRule",
            "comments": []
          }
        ],
        "comments": [],
        "view": {
          "col": 1,
          "row": 8
        },
        "created": "2023-10-16T18:32:47.727Z",
        "createdBy": {
          "_id": "652054b92c281c82e5b4c8b4",
          "provenance": "local_aaa",
          "username": "admin@pronghorn"
        },
        "lastUpdated": "2023-10-16T18:32:47.727Z",
        "lastUpdatedBy": {
          "_id": "652054b92c281c82e5b4c8b4",
          "provenance": "local_aaa",
          "username": "admin@pronghorn"
        },
        "version": "4.1.2-2023.1.10",
        "tags": []
      }
    },
    {
      "type": "transformation",
      "data": {
        "_id": "6245ac411678ea01c7fbcd3e",
        "name": "Build SG Delete Array",
        "description": "",
        "incoming": [
          {
            "$id": "sgResponse",
            "type": "object",
            "properties": {
              "response": {
                "type": "object",
                "properties": {
                  "DescribeSecurityGroupsResponse": {
                    "type": "object",
                    "properties": {
                      "securityGroupInfo": {
                        "type": "object",
                        "properties": {
                          "item": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "groupId": {
                                  "type": "string",
                                  "examples": [
                                    "sg-06252ec7d193ab7cc"
                                  ]
                                },
                                "groupName": {
                                  "type": "string",
                                  "examples": [
                                    "default"
                                  ]
                                }
                              },
                              "required": []
                            }
                          }
                        },
                        "required": []
                      }
                    },
                    "required": []
                  }
                },
                "required": []
              }
            },
            "required": []
          }
        ],
        "outgoing": [
          {
            "$id": "sgDeleteArray",
            "type": "array"
          }
        ],
        "steps": [
          {
            "id": 1,
            "type": "method",
            "library": "Array",
            "method": "filter",
            "args": [
              null,
              "removeDefault"
            ],
            "view": {
              "row": 1,
              "col": 1
            }
          },
          {
            "id": 2,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "sgResponse",
              "ptr": "/response/DescribeSecurityGroupsResponse/securityGroupInfo/item"
            },
            "to": {
              "location": "method",
              "name": 1,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 4,
            "type": "method",
            "library": "Array",
            "method": "map",
            "args": [
              null,
              "Build SG Delete Object"
            ],
            "view": {
              "row": 1,
              "col": 2
            }
          },
          {
            "id": 5,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 1,
              "ptr": "/return"
            },
            "to": {
              "location": "method",
              "name": 4,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 6,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 4,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "sgDeleteArray",
              "ptr": ""
            }
          }
        ],
        "functions": [
          {
            "incoming": [
              {
                "type": "object",
                "properties": {
                  "groupId": {
                    "type": "string",
                    "examples": [
                      "sg-06252ec7d193ab7cc"
                    ]
                  },
                  "groupName": {
                    "type": "string",
                    "examples": [
                      "default"
                    ]
                  }
                },
                "required": [],
                "$id": "element"
              },
              {
                "title": "index",
                "type": "number",
                "optional": true,
                "$id": "index"
              },
              {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "groupId": {
                      "type": "string",
                      "examples": [
                        "sg-06252ec7d193ab7cc"
                      ]
                    },
                    "groupName": {
                      "type": "string",
                      "examples": [
                        "default"
                      ]
                    }
                  },
                  "required": []
                },
                "$id": "array",
                "optional": true
              },
              {
                "$id": "thisArg",
                "type": "object",
                "properties": {},
                "isContext": true,
                "isThis": true,
                "isIndexed": true
              }
            ],
            "outgoing": [
              {
                "title": "return",
                "type": "boolean",
                "$id": "return"
              }
            ],
            "steps": [
              {
                "id": 1,
                "type": "method",
                "library": "Equality",
                "method": "inequality",
                "args": [
                  null,
                  "default"
                ],
                "view": {
                  "row": 1,
                  "col": 1
                }
              },
              {
                "id": 2,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "element",
                  "ptr": "/groupName"
                },
                "to": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 3,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/return"
                },
                "to": {
                  "location": "outgoing",
                  "name": "return",
                  "ptr": ""
                }
              }
            ],
            "functions": [],
            "name": "removeDefault",
            "view": {
              "col": 1,
              "row": 5
            },
            "id": "removeDefault",
            "comments": []
          },
          {
            "incoming": [
              {
                "type": [
                  "array",
                  "boolean",
                  "number",
                  "integer",
                  "string",
                  "object",
                  "null"
                ],
                "$id": "currentValue"
              },
              {
                "title": "index",
                "type": "number",
                "optional": true,
                "$id": "index"
              },
              {
                "type": "array",
                "$id": "array",
                "optional": true
              },
              {
                "$id": "thisArg",
                "type": "object",
                "properties": {},
                "isContext": true,
                "isThis": true,
                "isIndexed": true
              }
            ],
            "outgoing": [
              {
                "title": "newValue",
                "type": [
                  "array",
                  "boolean",
                  "number",
                  "integer",
                  "string",
                  "object",
                  "null"
                ],
                "editable": true,
                "$id": "newValue"
              }
            ],
            "steps": [
              {
                "id": 2,
                "type": "method",
                "library": "Object",
                "method": "getProperty",
                "args": [
                  null,
                  "groupId"
                ],
                "view": {
                  "row": 2,
                  "col": 1
                }
              },
              {
                "id": 3,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "currentValue",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 2,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 4,
                "type": "declaration",
                "library": "Object",
                "method": "new Object",
                "args": [
                  null
                ],
                "view": {
                  "row": 1,
                  "col": 1
                }
              },
              {
                "id": 5,
                "type": "method",
                "library": "Object",
                "method": "setProperty",
                "args": [
                  null,
                  "groupId",
                  null
                ],
                "view": {
                  "row": 1,
                  "col": 2
                }
              },
              {
                "id": 6,
                "type": "assign",
                "from": {
                  "location": "declaration",
                  "name": 4,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 5,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 7,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 2,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 5,
                  "ptr": "/args/2/value"
                }
              },
              {
                "id": 8,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 5,
                  "ptr": "/return"
                },
                "to": {
                  "location": "outgoing",
                  "name": "newValue",
                  "ptr": ""
                }
              }
            ],
            "functions": [],
            "name": "Build SG Delete Object",
            "view": {
              "col": 2,
              "row": 5
            },
            "id": "Build SG Delete Object",
            "comments": []
          }
        ],
        "comments": [],
        "view": {
          "col": 2,
          "row": 5
        },
        "created": "2023-10-16T18:39:42.180Z",
        "createdBy": {
          "_id": "652054b92c281c82e5b4c8b4",
          "provenance": "local_aaa",
          "username": "admin@pronghorn"
        },
        "lastUpdated": "2023-10-16T18:39:42.180Z",
        "lastUpdatedBy": {
          "_id": "652054b92c281c82e5b4c8b4",
          "provenance": "local_aaa",
          "username": "admin@pronghorn"
        },
        "version": "4.1.2-2023.1.10",
        "tags": []
      }
    },
    {
      "type": "transformation",
      "data": {
        "_id": "6532e52c344dfd019e4b388c",
        "name": "Build Subnet Delete Array",
        "description": "",
        "incoming": [
          {
            "$id": "subnetResponse",
            "type": "object",
            "properties": {
              "response": {
                "type": "object",
                "properties": {
                  "DescribeSubnetsResponse": {
                    "type": "object",
                    "properties": {
                      "subnetSet": {
                        "type": "object",
                        "properties": {
                          "item": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "subnetId": {
                                  "type": "string",
                                  "examples": [
                                    "subnet-0f7abee2208d3ffa0"
                                  ]
                                }
                              },
                              "required": []
                            }
                          }
                        },
                        "required": []
                      }
                    },
                    "required": []
                  }
                },
                "required": []
              }
            },
            "required": []
          }
        ],
        "outgoing": [
          {
            "$id": "subnetDeleteArray",
            "type": "array"
          }
        ],
        "steps": [
          {
            "id": 2,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "subnetResponse",
              "ptr": "/response/DescribeSubnetsResponse/subnetSet/item"
            },
            "to": {
              "location": "method",
              "name": 1,
              "ptr": "/args/0/value"
            },
            "context": "#"
          },
          {
            "id": 1,
            "type": "method",
            "library": "Array",
            "method": "map",
            "args": [
              null,
              "subnet builder"
            ],
            "view": {
              "row": 1,
              "col": 1
            },
            "context": "#"
          },
          {
            "id": 3,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 1,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "subnetDeleteArray",
              "ptr": ""
            },
            "context": "#"
          }
        ],
        "functions": [
          {
            "incoming": [
              {
                "type": "object",
                "properties": {
                  "subnetId": {
                    "type": "string",
                    "examples": [
                      "subnet-0f7abee2208d3ffa0"
                    ]
                  }
                },
                "required": [],
                "$id": "currentValue"
              },
              {
                "title": "index",
                "type": "number",
                "optional": true,
                "$id": "index"
              },
              {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "subnetId": {
                      "type": "string",
                      "examples": [
                        "subnet-0f7abee2208d3ffa0"
                      ]
                    }
                  },
                  "required": []
                },
                "$id": "array",
                "optional": true
              },
              {
                "$id": "thisArg",
                "type": "object",
                "properties": {},
                "isContext": true
              }
            ],
            "outgoing": [
              {
                "title": "newValue",
                "type": [
                  "array",
                  "boolean",
                  "number",
                  "integer",
                  "string",
                  "object",
                  "null"
                ],
                "editable": true,
                "$id": "newValue"
              }
            ],
            "steps": [
              {
                "id": 1,
                "type": "declaration",
                "library": "Object",
                "method": "new Object",
                "args": [
                  null
                ],
                "view": {
                  "row": 1,
                  "col": 1
                },
                "context": "#"
              },
              {
                "id": 5,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "currentValue",
                  "ptr": "/subnetId"
                },
                "to": {
                  "location": "method",
                  "name": 3,
                  "ptr": "/args/2/value"
                },
                "context": "#"
              },
              {
                "id": 4,
                "type": "assign",
                "from": {
                  "location": "declaration",
                  "name": 1,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 3,
                  "ptr": "/args/0/value"
                },
                "context": "#"
              },
              {
                "id": 3,
                "type": "method",
                "library": "Object",
                "method": "setProperty",
                "args": [
                  null,
                  "subnetId",
                  null
                ],
                "view": {
                  "row": 1,
                  "col": 2
                },
                "context": "#"
              },
              {
                "id": 6,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 3,
                  "ptr": "/return"
                },
                "to": {
                  "location": "outgoing",
                  "name": "newValue",
                  "ptr": ""
                },
                "context": "#"
              }
            ],
            "functions": [],
            "name": "subnet builder",
            "view": {
              "col": 2,
              "row": 4
            },
            "id": "subnet builder",
            "comments": []
          }
        ],
        "comments": [],
        "view": {
          "col": 1,
          "row": 5
        },
        "created": "2023-11-21T19:36:03.825Z",
        "createdBy": {
          "_id": "652054b92c281c82e5b4c8b4",
          "provenance": "local_aaa",
          "username": "admin@pronghorn"
        },
        "lastUpdated": "2023-11-22T15:22:22.473Z",
        "lastUpdatedBy": {
          "_id": "652054b92c281c82e5b4c8b4",
          "provenance": "local_aaa",
          "username": "admin@pronghorn"
        },
        "version": "4.1.2-2023.1.10",
        "tags": []
      }
    },
    {
      "type": "transformation",
      "data": {
        "_id": "63e3a39ed59d6601415e4e09",
        "name": "Build VPC Filter",
        "description": "",
        "incoming": [
          {
            "$id": "vpcId",
            "type": "string"
          }
        ],
        "outgoing": [
          {
            "$id": "vpcFilter",
            "type": "array"
          }
        ],
        "steps": [
          {
            "id": 3,
            "type": "function",
            "function": "buildFilterObject",
            "args": [
              "vpc-id",
              null
            ],
            "view": {
              "row": 1,
              "col": 1
            }
          },
          {
            "id": 10,
            "type": "declaration",
            "library": "Array",
            "method": "new Array",
            "args": [
              null
            ],
            "view": {
              "row": 1,
              "col": 2
            },
            "context": "#",
            "polymorphIndex": 0
          },
          {
            "id": 11,
            "type": "assign",
            "from": {
              "location": "function",
              "name": 3,
              "ptr": "/return/tag"
            },
            "to": {
              "location": "declaration",
              "name": 10,
              "ptr": "/args/0/value"
            },
            "context": "#"
          },
          {
            "id": 12,
            "type": "assign",
            "from": {
              "location": "declaration",
              "name": 10,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "vpcFilter",
              "ptr": ""
            },
            "context": "#"
          },
          {
            "id": 13,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "vpcId",
              "ptr": ""
            },
            "to": {
              "location": "function",
              "name": 3,
              "ptr": "/args/1/value"
            },
            "context": "#"
          }
        ],
        "functions": [
          {
            "incoming": [
              {
                "$id": "Name",
                "type": "string"
              },
              {
                "$id": "Value",
                "type": "string"
              }
            ],
            "outgoing": [
              {
                "$id": "tag",
                "type": "object",
                "properties": {
                  "Name": {
                    "type": "string",
                    "examples": [
                      "Name"
                    ]
                  },
                  "Value": {
                    "type": "string",
                    "examples": [
                      "Value"
                    ]
                  }
                },
                "required": []
              }
            ],
            "steps": [
              {
                "id": 2,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "Value",
                  "ptr": ""
                },
                "to": {
                  "location": "outgoing",
                  "name": "tag",
                  "ptr": "/Value"
                },
                "context": "#"
              },
              {
                "id": 3,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "Name",
                  "ptr": ""
                },
                "to": {
                  "location": "outgoing",
                  "name": "tag",
                  "ptr": "/Name"
                },
                "context": "#"
              }
            ],
            "functions": [],
            "name": "buildFilterObject",
            "view": {
              "col": 1,
              "row": 5
            },
            "id": "buildFilterObject",
            "comments": []
          }
        ],
        "comments": [],
        "view": {
          "col": 2,
          "row": 5
        },
        "created": "2023-10-16T17:21:50.493Z",
        "createdBy": {
          "_id": "652054b92c281c82e5b4c8b4",
          "provenance": "local_aaa",
          "username": "admin@pronghorn"
        },
        "lastUpdated": "2023-10-16T17:21:50.493Z",
        "lastUpdatedBy": {
          "_id": "652054b92c281c82e5b4c8b4",
          "provenance": "local_aaa",
          "username": "admin@pronghorn"
        },
        "version": "4.1.2-2023.1.10",
        "tags": []
      }
    },
    {
      "type": "transformation",
      "data": {
        "_id": "655e0ee83bd5d401c431dc95",
        "name": "Build VPC Tag Data",
        "description": "",
        "incoming": [
          {
            "$id": "createVpcResponse",
            "type": "object",
            "properties": {
              "response": {
                "type": "object",
                "properties": {
                  "CreateVpcResponse": {
                    "type": "object",
                    "properties": {
                      "_attr": {
                        "type": "object",
                        "properties": {
                          "xmlns": {
                            "type": "string",
                            "examples": [
                              "http://ec2.amazonaws.com/doc/2016-11-15/"
                            ]
                          }
                        },
                        "required": []
                      },
                      "requestId": {
                        "type": "string",
                        "examples": [
                          "7f29ef6d-b4ec-463d-971b-d28d4b1d73b3"
                        ],
                        "format": "uuid"
                      },
                      "vpc": {
                        "type": "object",
                        "properties": {
                          "vpcId": {
                            "type": "string",
                            "examples": [
                              "vpc-061a2673e5d59fb85"
                            ]
                          },
                          "ownerId": {
                            "type": "string",
                            "examples": [
                              "314014972859"
                            ]
                          },
                          "state": {
                            "type": "string",
                            "examples": [
                              "pending"
                            ]
                          },
                          "cidrBlock": {
                            "type": "string",
                            "examples": [
                              "10.20.30.0/28"
                            ]
                          },
                          "cidrBlockAssociationSet": {
                            "type": "object",
                            "properties": {
                              "item": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "cidrBlock": {
                                      "type": "string",
                                      "examples": [
                                        "10.20.30.0/28"
                                      ]
                                    },
                                    "associationId": {
                                      "type": "string",
                                      "examples": [
                                        "vpc-cidr-assoc-0dbe5ead82813290a"
                                      ]
                                    },
                                    "cidrBlockState": {
                                      "type": "object",
                                      "properties": {
                                        "state": {
                                          "type": "string",
                                          "examples": [
                                            "associated"
                                          ]
                                        }
                                      },
                                      "required": []
                                    }
                                  },
                                  "required": []
                                }
                              }
                            },
                            "required": []
                          },
                          "ipv6CidrBlockAssociationSet": {
                            "type": "string"
                          },
                          "dhcpOptionsId": {
                            "type": "string",
                            "examples": [
                              "dopt-0a03008489c05e706"
                            ]
                          },
                          "instanceTenancy": {
                            "type": "string",
                            "examples": [
                              "default"
                            ]
                          },
                          "isDefault": {
                            "type": "string",
                            "examples": [
                              "false"
                            ]
                          }
                        },
                        "required": []
                      }
                    },
                    "required": []
                  }
                },
                "required": []
              }
            },
            "required": []
          },
          {
            "$id": "vpcName",
            "type": "string"
          }
        ],
        "outgoing": [
          {
            "$id": "vpcId",
            "type": "array"
          },
          {
            "$id": "vpcTags",
            "type": "array"
          }
        ],
        "steps": [
          {
            "id": 2,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "createVpcResponse",
              "ptr": "/response/CreateVpcResponse/vpc/vpcId"
            },
            "to": {
              "location": "declaration",
              "name": 1,
              "ptr": "/args/0/value"
            },
            "context": "#"
          },
          {
            "id": 4,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "vpcName",
              "ptr": ""
            },
            "to": {
              "location": "function",
              "name": 3,
              "ptr": "/args/1/value"
            },
            "context": "#"
          },
          {
            "id": 1,
            "type": "declaration",
            "library": "Array",
            "method": "new Array",
            "args": [
              null
            ],
            "view": {
              "row": 1,
              "col": 1
            },
            "context": "#",
            "polymorphIndex": 0
          },
          {
            "id": 3,
            "type": "function",
            "function": "buildTagData",
            "args": [
              "Name",
              null
            ],
            "view": {
              "row": 2,
              "col": 1
            }
          },
          {
            "id": 7,
            "type": "assign",
            "from": {
              "location": "function",
              "name": 3,
              "ptr": "/return/tag"
            },
            "to": {
              "location": "method",
              "name": 6,
              "ptr": "/args/1/value"
            },
            "context": "#"
          },
          {
            "id": 9,
            "type": "assign",
            "from": {
              "location": "declaration",
              "name": 1,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "vpcId",
              "ptr": ""
            },
            "context": "#"
          },
          {
            "id": 6,
            "type": "method",
            "library": "Array",
            "method": "concat",
            "args": [
              [],
              null
            ],
            "view": {
              "row": 2,
              "col": 2
            },
            "context": "#"
          },
          {
            "id": 10,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 6,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "vpcTags",
              "ptr": ""
            },
            "context": "#"
          }
        ],
        "functions": [
          {
            "incoming": [
              {
                "$id": "Key",
                "type": "string"
              },
              {
                "$id": "Value",
                "type": "string"
              }
            ],
            "outgoing": [
              {
                "$id": "tag",
                "type": "object",
                "properties": {
                  "Key": {
                    "type": "string",
                    "examples": [
                      "Key"
                    ]
                  },
                  "Value": {
                    "type": "string",
                    "examples": [
                      "Value"
                    ]
                  }
                },
                "required": []
              }
            ],
            "steps": [
              {
                "id": 1,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "Key",
                  "ptr": ""
                },
                "to": {
                  "location": "outgoing",
                  "name": "tag",
                  "ptr": "/Key"
                },
                "context": "#"
              },
              {
                "id": 2,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "Value",
                  "ptr": ""
                },
                "to": {
                  "location": "outgoing",
                  "name": "tag",
                  "ptr": "/Value"
                },
                "context": "#"
              }
            ],
            "functions": [],
            "name": "buildTagData",
            "view": {
              "col": 1,
              "row": 5
            },
            "id": "buildTagData",
            "comments": []
          }
        ],
        "comments": [],
        "view": {
          "col": 2,
          "row": 5
        },
        "created": "2023-11-22T14:23:36.016Z",
        "createdBy": {
          "_id": "652054b92c281c82e5b4c8b4",
          "provenance": "local_aaa",
          "username": "admin@pronghorn"
        },
        "lastUpdated": "2023-11-22T14:24:22.233Z",
        "lastUpdatedBy": {
          "_id": "652054b92c281c82e5b4c8b4",
          "provenance": "local_aaa",
          "username": "admin@pronghorn"
        },
        "version": "4.1.2-2023.1.10",
        "tags": []
      }
    },
    {
      "type": "transformation",
      "data": {
        "_id": "63e50af123ad20015d2a061b",
        "name": "Prepare VPC ID",
        "description": "",
        "incoming": [
          {
            "$id": "vpcId",
            "type": "string"
          }
        ],
        "outgoing": [
          {
            "$id": "vpcIdArray",
            "type": "array"
          },
          {
            "$id": "vpcIdFilter",
            "type": "array"
          }
        ],
        "steps": [
          {
            "id": 1,
            "type": "declaration",
            "library": "Array",
            "method": "new Array",
            "args": [
              null
            ],
            "view": {
              "row": 1,
              "col": 1
            },
            "context": "#",
            "polymorphIndex": 0
          },
          {
            "id": 2,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "vpcId",
              "ptr": ""
            },
            "to": {
              "location": "declaration",
              "name": 1,
              "ptr": "/args/0/value"
            },
            "context": "#"
          },
          {
            "id": 3,
            "type": "assign",
            "from": {
              "location": "declaration",
              "name": 1,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "vpcIdArray",
              "ptr": ""
            },
            "context": "#"
          },
          {
            "id": 4,
            "type": "function",
            "function": "buildNameValuePair",
            "args": [
              "network-interface.vpc-id",
              null
            ],
            "view": {
              "row": 2,
              "col": 1
            },
            "context": "#"
          },
          {
            "id": 5,
            "type": "declaration",
            "library": "Array",
            "method": "new Array",
            "args": [
              null
            ],
            "view": {
              "row": 2,
              "col": 2
            },
            "context": "#",
            "polymorphIndex": 0
          },
          {
            "id": 6,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "vpcId",
              "ptr": ""
            },
            "to": {
              "location": "function",
              "name": 4,
              "ptr": "/args/1/value"
            },
            "context": "#"
          },
          {
            "id": 7,
            "type": "assign",
            "from": {
              "location": "function",
              "name": 4,
              "ptr": "/return/nameValuePair"
            },
            "to": {
              "location": "declaration",
              "name": 5,
              "ptr": "/args/0/value"
            },
            "context": "#"
          },
          {
            "id": 8,
            "type": "assign",
            "from": {
              "location": "declaration",
              "name": 5,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "vpcIdFilter",
              "ptr": ""
            },
            "context": "#"
          }
        ],
        "functions": [
          {
            "incoming": [
              {
                "$id": "name",
                "type": "string"
              },
              {
                "$id": "value",
                "type": "string"
              }
            ],
            "outgoing": [
              {
                "$id": "nameValuePair",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "examples": [
                      "network-interface%2Evpc-id"
                    ]
                  },
                  "value": {
                    "type": "string",
                    "examples": [
                      "<!vpcId!>"
                    ]
                  }
                },
                "required": []
              }
            ],
            "steps": [
              {
                "id": 1,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "name",
                  "ptr": ""
                },
                "to": {
                  "location": "outgoing",
                  "name": "nameValuePair",
                  "ptr": "/name"
                },
                "context": "#"
              },
              {
                "id": 2,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "value",
                  "ptr": ""
                },
                "to": {
                  "location": "outgoing",
                  "name": "nameValuePair",
                  "ptr": "/value"
                },
                "context": "#"
              }
            ],
            "functions": [],
            "name": "buildNameValuePair",
            "view": {
              "col": 1,
              "row": 4
            },
            "id": "buildNameValuePair",
            "comments": []
          }
        ],
        "comments": [],
        "view": {
          "col": 2,
          "row": 5
        },
        "created": "2023-10-16T19:36:33.622Z",
        "createdBy": {
          "_id": "652054b92c281c82e5b4c8b4",
          "provenance": "local_aaa",
          "username": "admin@pronghorn"
        },
        "lastUpdated": "2023-10-16T19:36:33.622Z",
        "lastUpdatedBy": {
          "_id": "652054b92c281c82e5b4c8b4",
          "provenance": "local_aaa",
          "username": "admin@pronghorn"
        },
        "version": "4.1.2-2023.1.10",
        "tags": []
      }
    },
    {
      "type": "transformation",
      "data": {
        "_id": "63e520f723ad20015d2a061d",
        "name": "Process Instance Status",
        "description": "",
        "incoming": [
          {
            "$id": "describeInstanceResponse",
            "type": "object",
            "properties": {},
            "required": []
          }
        ],
        "outgoing": [
          {
            "$id": "launchComplete",
            "type": "boolean"
          }
        ],
        "steps": [
          {
            "id": 17,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "describeInstanceResponse",
              "ptr": ""
            },
            "to": {
              "location": "method",
              "name": 14,
              "ptr": "/args/2/value"
            },
            "context": "#"
          },
          {
            "id": 18,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "describeInstanceResponse",
              "ptr": ""
            },
            "to": {
              "location": "method",
              "name": 15,
              "ptr": "/args/2/value"
            },
            "context": "#"
          },
          {
            "id": 19,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "describeInstanceResponse",
              "ptr": ""
            },
            "to": {
              "location": "method",
              "name": 16,
              "ptr": "/args/2/value"
            },
            "context": "#"
          },
          {
            "id": 14,
            "type": "method",
            "library": "WorkFlowEngine",
            "method": "query",
            "args": [
              false,
              "response.DescribeInstanceStatusResponse.instanceStatusSet.item[0].instanceState.name",
              null
            ],
            "view": {
              "row": 1,
              "col": 1
            },
            "context": "#"
          },
          {
            "id": 15,
            "type": "method",
            "library": "WorkFlowEngine",
            "method": "query",
            "args": [
              false,
              "response.DescribeInstanceStatusResponse.instanceStatusSet.item[0].systemStatus.status",
              null
            ],
            "view": {
              "row": 2,
              "col": 1
            },
            "context": "#"
          },
          {
            "id": 16,
            "type": "method",
            "library": "WorkFlowEngine",
            "method": "query",
            "args": [
              false,
              "response.DescribeInstanceStatusResponse.instanceStatusSet.item[0].instanceStatus.status",
              null
            ],
            "view": {
              "row": 3,
              "col": 1
            },
            "context": "#"
          },
          {
            "id": 20,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 14,
              "ptr": "/return"
            },
            "to": {
              "location": "method",
              "name": 1,
              "ptr": "/args/0/value"
            },
            "context": "#"
          },
          {
            "id": 21,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 15,
              "ptr": "/return"
            },
            "to": {
              "location": "method",
              "name": 3,
              "ptr": "/args/0/value"
            },
            "context": "#"
          },
          {
            "id": 23,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 16,
              "ptr": "/return"
            },
            "to": {
              "location": "method",
              "name": 22,
              "ptr": "/args/0/value"
            },
            "context": "#"
          },
          {
            "id": 1,
            "type": "method",
            "library": "Equality",
            "method": "equality",
            "args": [
              null,
              "running"
            ],
            "view": {
              "row": 1,
              "col": 2
            },
            "context": "#"
          },
          {
            "id": 3,
            "type": "method",
            "library": "Equality",
            "method": "equality",
            "args": [
              null,
              "ok"
            ],
            "view": {
              "row": 2,
              "col": 2
            },
            "context": "#"
          },
          {
            "id": 22,
            "type": "method",
            "library": "Equality",
            "method": "equality",
            "args": [
              null,
              "ok"
            ],
            "view": {
              "row": 3,
              "col": 2
            },
            "context": "#"
          },
          {
            "id": 10,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 3,
              "ptr": "/return"
            },
            "to": {
              "location": "method",
              "name": 7,
              "ptr": "/args/0/value"
            },
            "context": "#"
          },
          {
            "id": 11,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 1,
              "ptr": "/return"
            },
            "to": {
              "location": "method",
              "name": 8,
              "ptr": "/args/0/value"
            },
            "context": "#"
          },
          {
            "id": 24,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 22,
              "ptr": "/return"
            },
            "to": {
              "location": "method",
              "name": 7,
              "ptr": "/args/1/value"
            },
            "context": "#"
          },
          {
            "id": 7,
            "type": "method",
            "library": "Logical",
            "method": "and",
            "args": [
              null,
              null
            ],
            "view": {
              "row": 2,
              "col": 3
            },
            "context": "#"
          },
          {
            "id": 12,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 7,
              "ptr": "/return"
            },
            "to": {
              "location": "method",
              "name": 8,
              "ptr": "/args/1/value"
            },
            "context": "#"
          },
          {
            "id": 8,
            "type": "method",
            "library": "Logical",
            "method": "and",
            "args": [
              null,
              null
            ],
            "view": {
              "row": 1,
              "col": 4
            },
            "context": "#"
          },
          {
            "id": 13,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 8,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "launchComplete",
              "ptr": ""
            },
            "context": "#"
          }
        ],
        "functions": [],
        "comments": [],
        "view": {
          "col": 4,
          "row": 5
        },
        "created": "2023-11-21T19:36:03.805Z",
        "createdBy": {
          "_id": "652054b92c281c82e5b4c8b4",
          "provenance": "local_aaa",
          "username": "admin@pronghorn"
        },
        "lastUpdated": "2023-11-22T19:08:17.836Z",
        "lastUpdatedBy": {
          "_id": "652054b92c281c82e5b4c8b4",
          "provenance": "local_aaa",
          "username": "admin@pronghorn"
        },
        "version": "4.1.2-2023.1.10",
        "tags": []
      }
    },
    {
      "type": "transformation",
      "data": {
        "_id": "6535d4e97c6b51019f8f4142",
        "name": "Process Instance Response",
        "description": "",
        "incoming": [
          {
            "$id": "instanceResponse",
            "type": "object",
            "properties": {
              "response": {
                "type": "object",
                "properties": {
                  "DescribeInstancesResponse": {
                    "type": "object",
                    "properties": {
                      "reservationSet": {
                        "type": "object",
                        "properties": {
                          "item": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "instancesSet": {
                                  "type": "object",
                                  "properties": {
                                    "item": {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "instanceId": {
                                            "type": "string",
                                            "examples": [
                                              "i-091629e3a896331c2"
                                            ]
                                          }
                                        },
                                        "required": []
                                      }
                                    }
                                  },
                                  "required": []
                                }
                              },
                              "required": []
                            }
                          }
                        },
                        "required": []
                      }
                    },
                    "required": []
                  }
                },
                "required": []
              }
            },
            "required": []
          }
        ],
        "outgoing": [
          {
            "$id": "instanceIdArray",
            "type": "array"
          }
        ],
        "steps": [
          {
            "id": 5,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "instanceResponse",
              "ptr": "/response/DescribeInstancesResponse/reservationSet/item"
            },
            "to": {
              "location": "method",
              "name": 4,
              "ptr": "/args/0/value"
            },
            "context": "#"
          },
          {
            "id": 4,
            "type": "method",
            "library": "Array",
            "method": "flatMap",
            "args": [
              null,
              "extractAndFlattenInstances"
            ],
            "view": {
              "row": 1,
              "col": 1
            },
            "context": "#"
          },
          {
            "id": 7,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 4,
              "ptr": "/return"
            },
            "to": {
              "location": "method",
              "name": 6,
              "ptr": "/args/0/value"
            },
            "context": "#"
          },
          {
            "id": 6,
            "type": "method",
            "library": "Array",
            "method": "map",
            "args": [
              null,
              "extractInstanceIds"
            ],
            "view": {
              "row": 1,
              "col": 2
            },
            "context": "#"
          },
          {
            "id": 8,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 6,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "instanceIdArray",
              "ptr": ""
            },
            "context": "#"
          }
        ],
        "functions": [
          {
            "incoming": [
              {
                "type": "object",
                "properties": {
                  "instancesSet": {
                    "type": "object",
                    "properties": {
                      "item": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "instanceId": {
                              "type": "string",
                              "examples": [
                                "i-091629e3a896331c2"
                              ]
                            }
                          },
                          "required": []
                        }
                      }
                    },
                    "required": []
                  }
                },
                "required": [],
                "$id": "currentValue"
              },
              {
                "title": "index",
                "type": "number",
                "optional": true,
                "$id": "index"
              },
              {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "instancesSet": {
                      "type": "object",
                      "properties": {
                        "item": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "instanceId": {
                                "type": "string",
                                "examples": [
                                  "i-091629e3a896331c2"
                                ]
                              }
                            },
                            "required": []
                          }
                        }
                      },
                      "required": []
                    }
                  },
                  "required": []
                },
                "$id": "array",
                "optional": true
              },
              {
                "$id": "thisArg",
                "type": "object",
                "properties": {},
                "isContext": true,
                "isThis": true,
                "isIndexed": true
              }
            ],
            "outgoing": [
              {
                "title": "newValue",
                "type": [
                  "array",
                  "boolean",
                  "number",
                  "integer",
                  "string",
                  "object",
                  "null"
                ],
                "$id": "newValue"
              }
            ],
            "steps": [
              {
                "id": 1,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "currentValue",
                  "ptr": "/instancesSet/item"
                },
                "to": {
                  "location": "outgoing",
                  "name": "newValue",
                  "ptr": ""
                },
                "context": "#"
              }
            ],
            "functions": [],
            "name": "extractAndFlattenInstances",
            "view": {
              "col": 2,
              "row": 4
            },
            "id": "extractAndFlattenInstances",
            "comments": []
          },
          {
            "incoming": [
              {
                "type": [
                  "array",
                  "boolean",
                  "number",
                  "integer",
                  "string",
                  "object",
                  "null"
                ],
                "$id": "currentValue"
              },
              {
                "title": "index",
                "type": "number",
                "optional": true,
                "$id": "index"
              },
              {
                "type": "array",
                "$id": "array",
                "optional": true
              },
              {
                "$id": "thisArg",
                "type": "object",
                "properties": {},
                "isContext": true,
                "isThis": true,
                "isIndexed": true
              }
            ],
            "outgoing": [
              {
                "title": "newValue",
                "type": [
                  "array",
                  "boolean",
                  "number",
                  "integer",
                  "string",
                  "object",
                  "null"
                ],
                "editable": true,
                "$id": "newValue"
              }
            ],
            "steps": [
              {
                "id": 2,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "currentValue",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/args/0/value"
                },
                "context": "#"
              },
              {
                "id": 1,
                "type": "method",
                "library": "Object",
                "method": "getProperty",
                "args": [
                  null,
                  "instanceId"
                ],
                "view": {
                  "row": 1,
                  "col": 1
                },
                "context": "#"
              },
              {
                "id": 3,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/return"
                },
                "to": {
                  "location": "outgoing",
                  "name": "newValue",
                  "ptr": ""
                },
                "context": "#"
              }
            ],
            "functions": [],
            "name": "extractInstanceIds",
            "view": {
              "col": 1,
              "row": 4
            },
            "id": "extractInstanceIds",
            "comments": []
          }
        ],
        "comments": [],
        "view": {
          "col": 2,
          "row": 5
        },
        "created": "2023-11-21T19:36:03.812Z",
        "createdBy": {
          "_id": "652054b92c281c82e5b4c8b4",
          "provenance": "local_aaa",
          "username": "admin@pronghorn"
        },
        "lastUpdated": "2023-11-22T17:04:48.195Z",
        "lastUpdatedBy": {
          "_id": "652054b92c281c82e5b4c8b4",
          "provenance": "local_aaa",
          "username": "admin@pronghorn"
        },
        "version": "4.1.2-2023.1.10",
        "tags": []
      }
    }
  ],
  "readme": "# AWS - EC2 - REST\n\n## Overview\n\nThe integration of Itential and the AWS EC2 solution enables network teams to utilize its REST API to build automations that can include common tasks for provisioning and configuring resources for AWS EC2. This is a library of related automations that can be used as modular components in your own larger, end-to-end workflows.\n\n\n## Workflows\n\n\n<table>\n  <thead>\n    <tr>\n      <th>Name</th>\n      <th>Overview</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><a href='https://gitlab.com/itentialopensource/pre-built-automations/aws-ec2-rest/-/blob/release/2023.1/documentation/Add Ingress Rule to Security Group - AWS.md' target='_blank'>Add Ingress Rule to Security Group - AWS</a></td>\n      <td>A modular workflow that automates adding an ingress rule to a security group.</td>\n    </tr>    <tr>\n      <td><a href='https://gitlab.com/itentialopensource/pre-built-automations/aws-ec2-rest/-/blob/release/2023.1/documentation/Create and Attach Internet Gateway - AWS.md' target='_blank'>Create and Attach Internet Gateway - AWS</a></td>\n      <td>A modular workflow that automates creating and attaching an internet gateway to a VPC in AWS.</td>\n    </tr>    <tr>\n      <td><a href='https://gitlab.com/itentialopensource/pre-built-automations/aws-ec2-rest/-/blob/release/2023.1/documentation/Create EC2 Instance - AWS.md' target='_blank'>Create EC2 Instance - AWS</a></td>\n      <td>A modular workflow that automates creating an EC2 instance in AWS.</td>\n    </tr>    <tr>\n      <td><a href='https://gitlab.com/itentialopensource/pre-built-automations/aws-ec2-rest/-/blob/release/2023.1/documentation/Create Route - AWS.md' target='_blank'>Create Route - AWS</a></td>\n      <td>A modular workflow that automates creating a route within a VPC in AWS.</td>\n    </tr>    <tr>\n      <td><a href='https://gitlab.com/itentialopensource/pre-built-automations/aws-ec2-rest/-/blob/release/2023.1/documentation/Create Security Group with Ingress Rules - AWS.md' target='_blank'>Create Security Group with Ingress Rules - AWS</a></td>\n      <td>A modular workflow that automates creating a security group with ingress rules in AWS.</td>\n    </tr>    <tr>\n      <td><a href='https://gitlab.com/itentialopensource/pre-built-automations/aws-ec2-rest/-/blob/release/2023.1/documentation/Create VPC - AWS.md' target='_blank'>Create VPC - AWS</a></td>\n      <td>A modular workflow that automates creating a VPC in AWS.</td>\n    </tr>    <tr>\n      <td><a href='https://gitlab.com/itentialopensource/pre-built-automations/aws-ec2-rest/-/blob/release/2023.1/documentation/Create VPC Subnet - AWS.md' target='_blank'>Create VPC Subnet - AWS</a></td>\n      <td>A modular workflow that automates creating a subnet for a VPC in AWS.</td>\n    </tr>    <tr>\n      <td><a href='https://gitlab.com/itentialopensource/pre-built-automations/aws-ec2-rest/-/blob/release/2023.1/documentation/Provision VPC with Networking - AWS.md' target='_blank'>Provision VPC with Networking - AWS</a></td>\n      <td>A modular workflow that automates creating and configuring a VPC with networking in AWS.</td>\n    </tr>    <tr>\n      <td><a href='https://gitlab.com/itentialopensource/pre-built-automations/aws-ec2-rest/-/blob/release/2023.1/documentation/Delete Security Groups by VPC - AWS.md' target='_blank'>Delete Security Groups by VPC - AWS</a></td>\n      <td>A modular workflow that automates deleting VPC Security groups in AWS.</td>\n    </tr>    <tr>\n      <td><a href='https://gitlab.com/itentialopensource/pre-built-automations/aws-ec2-rest/-/blob/release/2023.1/documentation/Delete Subnets by VPC - AWS.md' target='_blank'>Delete Subnets by VPC - AWS</a></td>\n      <td>A modular workflow that automates deleting subnets by VPC in AWS.</td>\n    </tr>    <tr>\n      <td><a href='https://gitlab.com/itentialopensource/pre-built-automations/aws-ec2-rest/-/blob/release/2023.1/documentation/Destroy VPC and EC2 Instance - AWS.md' target='_blank'>Destroy VPC and EC2 Instance - AWS</a></td>\n      <td>A modular workflow that automates destroying a VPC and EC2 Instance in AWS</td>\n    </tr>    <tr>\n      <td><a href='https://gitlab.com/itentialopensource/pre-built-automations/aws-ec2-rest/-/blob/release/2023.1/documentation/Detach and Delete Internet Gateways by VPC - AWS.md' target='_blank'>Detach and Delete Internet Gateways by VPC - AWS</a></td>\n      <td>A modular workflow that automates detaching and deleting VPC internet gateways in AWS.</td>\n    </tr>\n  </tbody>\n</table>\n\n\n## External Dependencies\n\n<table>\n  <thead>\n    <tr>\n      <th>Name</th>\n      <th>OS Version</th>\n      <th>API Version</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>AWS</td>\n      <td></td>\n      <td></td>\n    </tr>\n  </tbody>\n</table>\n\n## Adapters\n\n<table>\n  <thead>\n    <tr>\n      <th>Name</th>\n      <th>Version</th>\n      <th>Configuration Notes</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><a href=\"https://gitlab.com/itentialopensource/adapters/cloud/adapter-aws_ec2\">adapter-aws_ec2</a></td>\n      <td>^0.7.2</td>\n      <td>In order to run the workflows in this Pre-Built Automation, the adapter property <code>xmlArrayKeys</code> must be added to the AWS EC2 adapter configuration with value as seen below:\n\n```json\n\"xmlArrayKeys\": [\n  \"item\"\n]\n```\n\nThis will ensure all response objects will set the data type of any instance of property <code>item</code> to an array, even if a single element is assigned to the property.</td>\n    </tr>\n  </tbody>\n</table>"
}